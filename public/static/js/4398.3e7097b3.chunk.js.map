{"version":3,"file":"static/js/4398.3e7097b3.chunk.js","mappings":"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","sources":["components/modal/Confirmation.tsx","components/modal/MasterDataForm.tsx","hooks/useTable.ts","hooks/useTabs.ts","pages/location/taluk/TalukForm.tsx","sections/@dashboard/user/list/TalukTableRow.tsx","pages/location/taluk/TalukList.tsx","pages/sevak/DeleteConfirmationContent.tsx","utils/common/index.ts","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Box, Container, Divider, Modal, Stack, Typography, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport Iconify from '../Iconify';\r\nimport { SkeletonPost } from '../skeleton';\r\n\r\ninterface ConfirmationModalProps {\r\n  openModal: boolean;\r\n  handleClose?: VoidFunction;\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n  title: string;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 550,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '10px',\r\n};\r\n\r\nconst ConfirmationModal = ({\r\n  openModal,\r\n  handleClose,\r\n  handleSubmit,\r\n  children,\r\n  title = 'Add New Crop',\r\n  disabled,\r\n  isLoading,\r\n}: ConfirmationModalProps) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      disableEnforceFocus={false}\r\n      disableAutoFocus={false}\r\n      sx={{ outline: 0 }}\r\n    >\r\n      <Container\r\n        sx={{\r\n          maxWidth: {\r\n            xl: '2600px',\r\n            position: 'relative',\r\n            borderRadius: '20px',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={style}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            borderRadius={'10px 10px 0 0'}\r\n            p={2}\r\n            bgcolor={theme.palette.primary.lighter}\r\n          >\r\n            <Typography variant=\"h6\" color={theme.palette.grey[0]} sx={{ letterSpacing: '0.7px' }}>\r\n              {title}\r\n            </Typography>\r\n            <LoadingButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                minWidth: 0,\r\n                padding: 0.2,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                borderRadius: '50%',\r\n                bgcolor: theme.palette.common.white,\r\n                ':hover': {\r\n                  bgcolor: theme.palette.common.white,\r\n                },\r\n              }}\r\n            >\r\n              <Iconify\r\n                icon=\"iconamoon:close-bold\"\r\n                width={24}\r\n                height={24}\r\n                color={theme.palette.common.black}\r\n              />\r\n            </LoadingButton>\r\n          </Box>\r\n\r\n          <Divider />\r\n          {/* Content */}\r\n          {isLoading ? (\r\n            <SkeletonPost />\r\n          ) : (\r\n            <Box\r\n              mt={2}\r\n              //  sx={{ minHeight: 300 }}\r\n            >\r\n              {children}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Footer */}\r\n          <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" p={2}>\r\n            <LoadingButton variant=\"outlined\" onClick={handleClose} fullWidth sx={{ p: 1 }}>\r\n              Cancel\r\n            </LoadingButton>\r\n            <LoadingButton\r\n              variant=\"contained\"\r\n              disabled={disabled}\r\n              onClick={handleSubmit}\r\n              fullWidth\r\n              sx={{ p: 1 }}\r\n            >\r\n              {'Delete'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Box>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { LoadingButton } from '@mui/lab';\r\nimport { Box, Container, Divider, Modal, Stack, Typography, useTheme } from '@mui/material';\r\nimport React, { useEffect } from 'react';\r\nimport Iconify from '../Iconify';\r\nimport { FormProvider } from '../hook-form';\r\nimport { CropItem } from 'src/@types/crops';\r\nimport { ChallangesItem } from 'src/@types/challanges';\r\nimport { startLoading } from 'src/redux/slices/crops';\r\nimport { useDispatch } from 'src/redux/store';\r\nimport { SkeletonPost, SkeletonProduct } from '../skeleton';\r\n\r\ninterface MasterDataFormProps {\r\n  openModal: boolean;\r\n  handleClose?: VoidFunction;\r\n  children?: React.ReactNode;\r\n  title?: string;\r\n  methods: any;\r\n  onSubmit: any;\r\n  id?: string;\r\n  handleCropDetails?: any;\r\n  cropDetails?: CropItem | ChallangesItem;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 550,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '10px',\r\n};\r\n\r\nconst MasterDataForm = ({\r\n  openModal,\r\n  handleClose,\r\n  children,\r\n  methods,\r\n  onSubmit,\r\n  id,\r\n  cropDetails,\r\n  handleCropDetails,\r\n  title = 'Add New Crop',\r\n  disabled,\r\n  isLoading,\r\n}: MasterDataFormProps) => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(startLoading());\r\n      handleCropDetails();\r\n    }\r\n  }, [id]);\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      disableEnforceFocus={false}\r\n      disableAutoFocus={false}\r\n      sx={{ outline: 0 }}\r\n    >\r\n      <Container\r\n        sx={{\r\n          maxWidth: {\r\n            xl: '2600px',\r\n            position: 'relative',\r\n            borderRadius: '20px',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={style}>\r\n          <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Header */}\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              borderRadius={'10px 10px 0 0'}\r\n              p={2}\r\n              bgcolor={theme.palette.primary.lighter}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                color={theme.palette.grey[0]}\r\n                sx={{ letterSpacing: '0.7px' }}\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <LoadingButton\r\n                onClick={handleClose}\r\n                sx={{\r\n                  minWidth: 0,\r\n                  padding: 0.2,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  borderRadius: '50%',\r\n                  bgcolor: theme.palette.common.white,\r\n                  ':hover': {\r\n                    bgcolor: theme.palette.common.white,\r\n                  },\r\n                }}\r\n              >\r\n                <Iconify\r\n                  icon=\"iconamoon:close-bold\"\r\n                  width={24}\r\n                  height={24}\r\n                  color={theme.palette.common.black}\r\n                />\r\n              </LoadingButton>\r\n            </Box>\r\n\r\n            <Divider />\r\n            {/* Content */}\r\n            {isLoading ? (\r\n              <SkeletonPost />\r\n            ) : (\r\n              <Box\r\n                mt={2}\r\n                //  sx={{ minHeight: 300 }}\r\n              >\r\n                {children}\r\n              </Box>\r\n            )}\r\n\r\n            {/* Footer */}\r\n            <Divider />\r\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" p={2}>\r\n              <LoadingButton variant=\"outlined\" onClick={handleClose}>\r\n                Cancel\r\n              </LoadingButton>\r\n              <LoadingButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={disabled}\r\n                startIcon={<Iconify icon={!id ? 'mingcute:user-add-fill' : 'fa-solid:user-edit'} />}\r\n              >\r\n                {id ? 'Save' : 'Add'}\r\n              </LoadingButton>\r\n            </Stack>\r\n          </FormProvider>\r\n        </Box>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MasterDataForm;\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type UseTableProps = {\r\n  dense: boolean;\r\n  page: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n  rowsPerPage: number;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  //\r\n  selected: string[];\r\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\r\n  onSelectRow: (id: string) => void;\r\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void;\r\n  //\r\n  onSort: (id: string) => void;\r\n  onChangePage: (event: unknown, newPage: number) => void;\r\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nexport type Props = {\r\n  defaultDense?: boolean;\r\n  defaultOrder?: 'asc' | 'desc';\r\n  defaultOrderBy?: string;\r\n  defaultSelected?: string[];\r\n  defaultRowsPerPage?: number;\r\n  defaultCurrentPage?: number;\r\n};\r\n\r\nexport default function useTable(props?: Props) {\r\n  const [dense, setDense] = useState(props?.defaultDense || false);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\r\n\r\n  const onSort = (id: string) => {\r\n    const isAsc = orderBy === id && order === 'asc';\r\n    if (id !== '') {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(id);\r\n    }\r\n  };\r\n\r\n  const onSelectRow = (id: string) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const onSelectAllRows = (checked: boolean, newSelecteds: string[]) => {\r\n    if (checked) {\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const onChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    setPage,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onChangeRowsPerPage,\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (typeof orderBy === \"string\") {\r\n    const aValue = orderBy.split(\".\").reduce((o: any, i) => o[i], a);\r\n    const bValue = orderBy.split(\".\").reduce((o: any, i) => o[i], b);\r\n\r\n    if (bValue < aValue) {\r\n      return -1;\r\n    }\r\n    if (bValue > aValue) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  } else {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport function getComparator<Key extends keyof any>(\r\n  order: 'asc' | 'desc',\r\n  orderBy: Key\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\r\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTabs(defaultValues?: string) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event: React.SyntheticEvent<Element, Event>, newValue: string) => {\r\n      setCurrentTab(newValue);\r\n    },\r\n    setCurrentTab,\r\n  };\r\n}\r\n","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { RHFSelectDropdown, RHFTextField } from 'src/components/hook-form';\r\nimport { useSelector } from 'src/redux/store';\r\n\r\nexport const LocationList = [\r\n  { id: 'state', label: 'State', name: 'State', value: 'state' },\r\n  { id: 'district', label: 'District', name: 'District', value: 'district' },\r\n  { id: 'taluk', label: 'Taluk', name: 'Taluk', value: 'taluk' },\r\n  { id: 'village', label: 'Village', name: 'Village', value: 'village' },\r\n];\r\n\r\ninterface LocationFormProp {\r\n  statusList?: any;\r\n  handleLocationChange?: any;\r\n  handleStatesSelect?: any;\r\n  handleDistrictSelect?: any;\r\n  handleTalukSelect?: any;\r\n  methods?: any;\r\n  state?: any;\r\n  isLoading?: boolean;\r\n}\r\nconst TalukForm = ({\r\n  statusList,\r\n  handleTalukSelect,\r\n  handleDistrictSelect,\r\n  handleLocationChange,\r\n  handleStatesSelect,\r\n  methods,\r\n  state,\r\n  isLoading,\r\n}: LocationFormProp) => {\r\n  const { statesList, districtList, talukList } = useSelector((state) => state.user);\r\n  const { watch } = methods;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'grid',\r\n        columnGap: 2,\r\n        rowGap: 2,\r\n        gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(1, 1fr)' },\r\n        p: 2,\r\n      }}\r\n    >\r\n      <RHFSelectDropdown\r\n        name=\"location\"\r\n        label={'Select location'}\r\n        placeholder={'location'}\r\n        value={watch('location')}\r\n        options={LocationList}\r\n        onChange={handleLocationChange}\r\n        disabled={true}\r\n      />\r\n\r\n      {['district', 'taluk', 'village']?.includes(watch('location')) && (\r\n        <RHFSelectDropdown\r\n          name=\"selectStates\"\r\n          label={'Select States'}\r\n          placeholder={'States'}\r\n          value={watch('selectStates')}\r\n          options={statesList || []}\r\n          onChange={handleStatesSelect}\r\n          disabled={state?.id ? true : false}\r\n        />\r\n      )}\r\n\r\n      {['taluk', 'village']?.includes(watch('location')) &&\r\n        watch('selectStates') &&\r\n        Array?.isArray(districtList?.childEntities) &&\r\n        districtList?.childEntities?.length > 0 && (\r\n          <RHFSelectDropdown\r\n            name=\"selectDistrict\"\r\n            label=\"Select District\"\r\n            placeholder=\"District\"\r\n            value={watch('selectDistrict')}\r\n            options={districtList?.childEntities || []}\r\n            defaultMessage=\"Please Select State\"\r\n            onChange={handleDistrictSelect}\r\n            disabled={state?.id ? true : false}\r\n          />\r\n        )}\r\n\r\n      <RHFTextField name=\"name\" label={'Name'} placeholder={'Name'} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TalukForm;\r\n","import { useState } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { TableRow, TableCell, Typography, MenuItem } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { TableMoreMenu } from '../../../../components/table';\r\nimport { PitItem } from 'src/@types/pits';\r\nimport { formatedDate } from 'src/utils/formateDate';\r\nimport { LocationListing } from 'src/@types/location';\r\nimport { getEntityName } from 'src/utils/common';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  row: LocationListing | null;\r\n  handleShowDetails?: (id: any) => void;\r\n  onhandleDeleteRow?: (id: any, name: any) => void;\r\n  onhandleEditDetails?: (id: any) => void;\r\n};\r\n\r\nexport default function TalukTableRow({\r\n  row,\r\n  handleShowDetails,\r\n  onhandleDeleteRow,\r\n  onhandleEditDetails,\r\n}: Props) {\r\n  const theme = useTheme();\r\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setOpenMenuActions(event.currentTarget);\r\n  };\r\n  const handleCloseMenu = () => {\r\n    setOpenMenuActions(null);\r\n  };\r\n\r\n  const { id, name, farmerCount, checkUpperGeo } = row || {};\r\n\r\n  const stateName = getEntityName('state', checkUpperGeo);\r\n  const districtName = getEntityName('district', checkUpperGeo);\r\n  const talukName = getEntityName('taluk', checkUpperGeo);\r\n\r\n  return (\r\n    <TableRow\r\n      hover\r\n      onClick={() => handleShowDetails && handleShowDetails(id)}\r\n      sx={{ textTransform: 'capitalize' }}\r\n    >\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {talukName?.id ? talukName?.name : '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {districtName?.id ? districtName?.name : '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {stateName?.id ? stateName?.name : '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {farmerCount || '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"left\">\r\n        <TableMoreMenu\r\n          open={openMenu}\r\n          onOpen={handleOpenMenu}\r\n          onClose={handleCloseMenu}\r\n          actions={\r\n            <>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleEditDetails && onhandleEditDetails(id);\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                <Iconify icon={'eva:edit-fill'} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleDeleteRow && onhandleDeleteRow(id, name);\r\n                  handleCloseMenu();\r\n                }}\r\n                sx={{ color: 'error.main' }}\r\n              >\r\n                <Iconify icon={'eva:trash-2-outline'} />\r\n                Delete\r\n              </MenuItem>\r\n            </>\r\n          }\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useEffect, useMemo, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  Container,\r\n  TableContainer,\r\n  TablePagination,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport { getPitsList } from 'src/redux/slices/pits';\r\nimport useTable from 'src/hooks/useTable';\r\nimport useTabs from 'src/hooks/useTabs';\r\nimport Page from 'src/components/Page';\r\nimport HeaderBreadcrumbs from 'src/components/HeaderBreadcrumbs';\r\nimport { PATH_DASHBOARD } from 'src/routes/paths';\r\nimport { UserTableToolbar } from 'src/sections/@dashboard/user/list';\r\nimport Scrollbar from 'src/components/Scrollbar';\r\nimport { TableHeadCustom, TableNoData, TableSkeleton } from 'src/components/table';\r\nimport LocationTableRow from 'src/sections/@dashboard/user/list/LocationTableRow';\r\nimport {\r\n  addLocationsDetails,\r\n  deleteVillage,\r\n  editLocationsDetails,\r\n  getLocationDetails,\r\n  getLocationList,\r\n  getVillageLocationList,\r\n  setEmptyLocationData,\r\n} from 'src/redux/slices/locations';\r\nimport { LocationAdd, LocationListing } from 'src/@types/location';\r\nimport MasterDataForm from 'src/components/modal/MasterDataForm';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {\r\n  emptyDistrictList,\r\n  emptyTalukList,\r\n  getDistrictList,\r\n  getStatesList,\r\n  getTalukList,\r\n  getVillageList,\r\n} from 'src/redux/slices/user';\r\nimport { useSnackbar } from 'notistack';\r\nimport Iconify from 'src/components/Iconify';\r\nimport { getEntityName } from 'src/utils/common';\r\nimport ConfirmationModal from 'src/components/modal/Confirmation';\r\nimport { DeleteConfirmationContent } from '../../sevak/DeleteConfirmationContent';\r\nimport GeoLocationAdd from '../village/GeoLocationAdd';\r\nimport TalukForm from './TalukForm';\r\nimport TalukTableRow from 'src/sections/@dashboard/user/list/TalukTableRow';\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'taluk', label: 'Taluk', align: 'left' },\r\n  { id: 'district', label: 'District', align: 'left' },\r\n  { id: 'state', label: 'State', align: 'left' },\r\n  { id: 'nofarmer', label: 'Farmer Count', align: 'left' },\r\n  { id: 'action', label: 'Action', align: 'left' },\r\n];\r\n\r\nexport default function TalukList() {\r\n  const {\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    selected,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n    setPage,\r\n  } = useTable();\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [filterVillage, setFilterVillage] = useState('');\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    id: '',\r\n    selectStages: '',\r\n    openModal: false,\r\n    villageId: null,\r\n    parentId: '',\r\n    stateId: '',\r\n    districtId: '',\r\n    talukId: '',\r\n    isLoading: false,\r\n    openDeleteModal: false,\r\n    VillageName: '',\r\n  });\r\n\r\n  const { currentTab: filterStatus } = useTabs('all');\r\n\r\n  useEffect(() => {\r\n    handleLocationList();\r\n    getStatesList();\r\n  }, []);\r\n\r\n  const handleLocationList = () => {\r\n    getVillageLocationList('', '', 'taluk');\r\n  };\r\n\r\n  const handleLocationDetails = () => {\r\n    setState((prev: any) => ({ ...prev, isLoading: true }));\r\n    getLocationDetails(state?.id);\r\n  };\r\n\r\n  const { locationData, talukLocationList, isLoading } = useSelector((state) => state.locations);\r\n  const { districtList, talukList } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(emptyDistrictList(null));\r\n    if (locationData?.id && state?.id) {\r\n      setState((prev: any) => ({ ...prev, isLoading: true }));\r\n      const stateName = getEntityName('state', locationData?.checkUpperGeo);\r\n      const districtName = getEntityName('district', locationData?.checkUpperGeo);\r\n      const talukName = getEntityName('taluk', locationData?.checkUpperGeo);\r\n      const villagetName = getEntityName('village', locationData?.checkUpperGeo);\r\n\r\n      setValue('selectStates', stateName?.id);\r\n      setValue('location', locationData?.checkUpperGeo?.entityType);\r\n      setValue('name', locationData?.checkUpperGeo?.name);\r\n\r\n      if (locationData && stateName?.id) {\r\n        getDistrictList(stateName?.id);\r\n\r\n        if (locationData && districtName?.id && districtList?.childEntities) {\r\n          getTalukList(districtName?.id);\r\n          setValue('selectDistrict', districtName?.id || '');\r\n          // setState((prev: any) => ({ ...prev, parentId: stateName?.id }));\r\n          if (talukName && locationData && talukList?.childEntities) {\r\n            getVillageList(talukName?.id);\r\n            setValue('selectTaluk', talukName?.id || '');\r\n            // setState((prev: any) => ({ ...prev, isLoading: false, parentId: districtName?.id }));\r\n            setState((prev: any) => ({ ...prev, isLoading: false }));\r\n\r\n            if (villagetName && locationData) {\r\n              setValue('name', locationData?.checkUpperGeo?.name);\r\n              setState((prev: any) => ({\r\n                ...prev,\r\n                // parentId: talukName?.id,\r\n                isLoading: false,\r\n              }));\r\n            } else {\r\n              setValue('name', locationData?.checkUpperGeo?.name);\r\n              setState((prev: any) => ({\r\n                ...prev,\r\n                // parentId: talukName?.id,\r\n                isLoading: false,\r\n              }));\r\n            }\r\n          } else {\r\n            setState((prev: any) => ({ ...prev, isLoading: false }));\r\n            setValue('selectTaluk', locationData?.checkUpperGeo?.id || '');\r\n          }\r\n        } else if (locationData && stateName?.id && !districtName?.id) {\r\n          setValue('selectDistrict', locationData?.checkUpperGeo?.id || '');\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n        }\r\n      }\r\n    }\r\n  }, [locationData?.id, state?.id]);\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      location: '',\r\n      selectStates: '',\r\n      selectDistrict: '',\r\n      selectTaluk: '',\r\n      name: '',\r\n    }),\r\n    []\r\n  );\r\n\r\n  const NewLocationSchema = Yup.object().shape({\r\n    location: Yup.string().required('Location is required'),\r\n    name: Yup.string().required('Name is required').max(50, 'Limit of 50 characters'),\r\n    selectStates: Yup.string().when('location', {\r\n      is: (value: any) => value === 'district' || value === 'taluk' || value === 'village', // Check if location is 'district' or 'taluk'\r\n      then: Yup.string().required('State is required'), // State becomes required\r\n      otherwise: Yup.string(), // No validation otherwise\r\n    }),\r\n    selectDistrict: Yup.string().when('location', {\r\n      is: (value: any) => value === 'taluk' || value === 'village', // Check if location is 'taluk'\r\n      then: Yup.string().required('District is required'),\r\n      otherwise: Yup.string(),\r\n    }),\r\n  });\r\n\r\n  const methods = useForm<LocationAdd>({\r\n    resolver: yupResolver(NewLocationSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    setError,\r\n    clearErrors,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const fieldsToClear = ['location', 'name', 'selectDistrict', 'selectStates', 'selectTaluk'];\r\n\r\n  const onSearch = () => {\r\n    setPage(0);\r\n    const statgesSearch = state.selectStages;\r\n    getPitsList(filterName, filterVillage, statgesSearch);\r\n  };\r\n\r\n  const handleFilterName = (filterName: string) => {\r\n    setFilterName(filterName);\r\n  };\r\n\r\n  const handleFilterRole = (filterVillage: string) => {\r\n    setFilterVillage(filterVillage);\r\n  };\r\n\r\n  const isNotFound =\r\n    (!talukLocationList?.length && !!filterName) ||\r\n    (!talukLocationList?.length && !!filterVillage) ||\r\n    (!talukLocationList?.length && !!filterName) ||\r\n    (!talukLocationList?.length && !!filterStatus);\r\n\r\n  const handleLocationChange = () => {\r\n    getStatesList();\r\n    setValue('selectStates', '');\r\n    setValue('selectDistrict', '');\r\n    setValue('selectTaluk', '');\r\n    setValue('name', '');\r\n  };\r\n\r\n  const onhandleEditDetails = (id: string) => {\r\n    // dispatch(emptyDistrictList(null));\r\n    setState((prev) => ({ ...prev, openModal: true, id: id, isLoading: true }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    dispatch(emptyDistrictList(null));\r\n    setState((prev) => ({ ...prev, openModal: false, id: '', isLoading: false }));\r\n    fieldsToClear.forEach((field: any) => clearErrors(field));\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    setState((prev) => ({ ...prev, openModal: true, id: '' }));\r\n    setValue('location', 'taluk');\r\n    handleLocationChange();\r\n  };\r\n\r\n  const handleStatesSelect = (id: any) => {\r\n    setState((prev: any) => ({ ...prev, parentId: id, stateId: id }));\r\n    getDistrictList(id);\r\n    setValue('selectDistrict', '');\r\n    setValue('selectTaluk', '');\r\n    setValue('name', '');\r\n  };\r\n\r\n  const handleDistrictSelect = (id: any) => {\r\n    setState((prev: any) => ({ ...prev, parentId: id, districtId: id }));\r\n    getTalukList(id);\r\n    setValue('selectTaluk', '');\r\n    setValue('name', '');\r\n  };\r\n\r\n  const handleTalukSelect = (id: string) => {\r\n    setState((prev: any) => ({ ...prev, parentId: id, talukId: id }));\r\n    setValue('name', '');\r\n  };\r\n\r\n  const onSubmit = async (data?: LocationAdd) => {\r\n    const payload = {\r\n      name: data?.name,\r\n      entityType: data?.location,\r\n      ...(state?.parentId && { parentId: state?.parentId }),\r\n    };\r\n\r\n    if (state?.id) {\r\n      dispatch(editLocationsDetails(payload, state?.id)).then((res: any) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          handleLocationList();\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n          handleClose();\r\n          dispatch(emptyTalukList(null));\r\n          dispatch(setEmptyLocationData(null));\r\n        } else if (res?.data?.statusCode === 409) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n        } else if (res?.data?.statusCode === 422) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n        } else {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n          handleClose();\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(addLocationsDetails(payload)).then((res: any) => {\r\n        if (res?.data?.statusCode === 201) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          handleLocationList();\r\n          handleClose();\r\n        } else if (res?.data?.statusCode === 409) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n        } else if (res?.data?.statusCode === 422) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onhandleDeleteRow = (id: string, name: string) => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: true, id: id, VillageName: name }));\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: false, id: '', VillageName: '' }));\r\n  };\r\n\r\n  const handleDeleteTaluk = () => {\r\n    dispatch(deleteVillage(state?.id))\r\n      .then((res) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          getLocationList();\r\n          setState((prev) => ({ ...prev, openDeleteModal: false, id: '', VillageName: '' }));\r\n        } else {\r\n          getLocationList();\r\n          setState((prev) => ({ ...prev, openDeleteModal: false, id: '', VillageName: '' }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('error');\r\n      });\r\n  };\r\n\r\n  const handleTalukDisabled = () => {\r\n    if (\r\n      locationData?.checkUpperGeo?.name === watch('name') ||\r\n      !watch('name')?.length ||\r\n      !watch('selectStates')?.length\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Taluk\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Taluk List\"\r\n          links={[{ href: PATH_DASHBOARD.location.root }]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\r\n              onClick={handleAddUser}\r\n            >\r\n              Add Geolocation\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card sx={{ pt: 2 }}>\r\n          {/* <UserTableToolbar\r\n            filterName={filterName}\r\n            filterVillage={filterVillage}\r\n            onFilterName={handleFilterName}\r\n            onFilterVillage={handleFilterRole}\r\n            onSearch={onSearch}\r\n            placeholderText={'Search by state name'}\r\n            placeholderTextSecond={'Search by village name'}\r\n          /> */}\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800, position: 'relative' }}>\r\n              <Table size={'medium'}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={talukLocationList?.length}\r\n                  numSelected={selected.length}\r\n                />\r\n\r\n                <TableBody>\r\n                  {isLoading && !talukLocationList?.length ? (\r\n                    <TableSkeleton />\r\n                  ) : talukLocationList?.length ? (\r\n                    talukLocationList\r\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                      .map((row: LocationListing) => (\r\n                        <TalukTableRow\r\n                          key={row.id}\r\n                          row={row}\r\n                          onhandleDeleteRow={onhandleDeleteRow}\r\n                          onhandleEditDetails={onhandleEditDetails}\r\n                        />\r\n                      ))\r\n                  ) : (\r\n                    <TableNoData isNotFound={isNotFound} />\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <Box sx={{ position: 'relative' }}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={talukLocationList?.length ? talukLocationList.length : 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={onChangePage}\r\n              onRowsPerPageChange={onChangeRowsPerPage}\r\n            />\r\n          </Box>\r\n        </Card>\r\n      </Container>\r\n\r\n      <MasterDataForm\r\n        openModal={state.openModal}\r\n        isLoading={state.isLoading}\r\n        handleClose={handleClose}\r\n        onSubmit={onSubmit}\r\n        methods={methods}\r\n        id={state?.id}\r\n        handleCropDetails={handleLocationDetails}\r\n        title={state.id ? 'Edit Taluk location' : 'Add Taluk Geo Location'}\r\n        disabled={handleTalukDisabled()}\r\n      >\r\n        <TalukForm\r\n          state={state}\r\n          methods={methods}\r\n          handleLocationChange={handleLocationChange}\r\n          handleStatesSelect={handleStatesSelect}\r\n          handleDistrictSelect={handleDistrictSelect}\r\n          handleTalukSelect={handleTalukSelect}\r\n          isLoading={state.isLoading}\r\n        />\r\n      </MasterDataForm>\r\n\r\n      <ConfirmationModal\r\n        openModal={state.openDeleteModal}\r\n        // isLoading={isLoading}\r\n        handleClose={handleDeleteClose}\r\n        title={'Delete Confirmation!'}\r\n        handleSubmit={handleDeleteTaluk}\r\n      >\r\n        <DeleteConfirmationContent userName={state?.VillageName} />\r\n      </ConfirmationModal>\r\n    </Page>\r\n  );\r\n}\r\n","import { Box, Typography, Button } from '@mui/material';\r\nimport Iconify from 'src/components/Iconify';\r\n\r\ninterface DeleteConfirmationProps {\r\n  userName: string;\r\n}\r\n\r\nexport const DeleteConfirmationContent = ({\r\n  userName,\r\n}: DeleteConfirmationProps) => (\r\n  <Box\r\n    sx={{\r\n      p: 2,\r\n      minHeight: '180px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      textAlign: 'center',\r\n    }}\r\n  >\r\n    {/* Icon Box */}\r\n    <Box\r\n      sx={{\r\n        width: 80,\r\n        height: 80,\r\n        borderRadius: '50%',\r\n        backgroundColor: '#FDECF2', \r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      <Iconify  \r\n        icon=\"mingcute:delete-2-line\"\r\n        sx={{ fontSize: 32, color: '#E91E63' }} \r\n      />\r\n    </Box>\r\n\r\n    {/* Confirmation Text */}\r\n    <Typography\r\n      variant=\"h6\"\r\n      sx={{\r\n        fontWeight: 'bold',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      Are you sure you want to remove {userName}?\r\n    </Typography>\r\n\r\n  </Box>\r\n);\r\n","export const getEntityName = (entityType: string, checkUpperGeo: any) => {\r\n  if (!checkUpperGeo) return null;\r\n  return checkUpperGeo?.entityType === entityType\r\n    ? checkUpperGeo\r\n    : checkUpperGeo?.parents?.find((item: any) => item?.entityType === entityType);\r\n};\r\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","borderRadius","openModal","handleClose","handleSubmit","children","title","disabled","isLoading","theme","useTheme","open","onClose","disableEnforceFocus","disableAutoFocus","sx","outline","maxWidth","xl","height","display","justifyContent","alignItems","p","palette","primary","lighter","variant","color","grey","letterSpacing","onClick","minWidth","padding","common","white","icon","black","mt","direction","spacing","fullWidth","methods","onSubmit","id","handleCropDetails","cropDetails","dispatch","useDispatch","useEffect","startLoading","formState","isSubmitting","type","startIcon","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","orderBy","setOrderBy","defaultOrder","order","setOrder","defaultCurrentPage","page","setPage","defaultRowsPerPage","rowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onSort","onChangePage","event","newPage","onChangeDense","target","onChangeRowsPerPage","parseInt","value","useTabs","defaultValues","currentTab","setCurrentTab","onChangeTab","newValue","LocationList","label","name","statusList","handleTalukSelect","handleDistrictSelect","handleLocationChange","handleStatesSelect","state","useSelector","user","statesList","districtList","watch","talukList","columnGap","rowGap","gridTemplateColumns","xs","sm","placeholder","options","onChange","includes","Array","isArray","childEntities","defaultMessage","TalukTableRow","row","handleShowDetails","onhandleDeleteRow","onhandleEditDetails","openMenu","setOpenMenuActions","handleCloseMenu","farmerCount","checkUpperGeo","stateName","getEntityName","districtName","talukName","TableRow","hover","textTransform","TableCell","Typography","noWrap","align","onOpen","currentTarget","actions","MenuItem","Iconify","TABLE_HEAD","TalukList","filterName","filterVillage","enqueueSnackbar","useSnackbar","selectStages","villageId","parentId","stateId","districtId","talukId","openDeleteModal","VillageName","setState","filterStatus","handleLocationList","getStatesList","getVillageLocationList","locations","locationData","talukLocationList","emptyDistrictList","prev","villagetName","setValue","entityType","getDistrictList","getTalukList","getVillageList","useMemo","location","selectStates","selectDistrict","selectTaluk","NewLocationSchema","Yup","shape","required","max","when","is","then","otherwise","useForm","resolver","yupResolver","reset","clearErrors","setError","fieldsToClear","isNotFound","forEach","field","data","payload","editLocationsDetails","res","statusCode","message","emptyTalukList","setEmptyLocationData","addLocationsDetails","Page","Container","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","action","Button","Card","pt","Scrollbar","TableContainer","Table","size","headLabel","rowCount","numSelected","TableBody","map","Box","TablePagination","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","MasterDataForm","getLocationDetails","handleTalukDisabled","Confirmation","deleteVillage","getLocationList","catch","error","console","log","DeleteConfirmationContent","userName","minHeight","flexDirection","textAlign","backgroundColor","mb","fontSize","fontWeight","parents","find","item","createBox"],"sourceRoot":""}