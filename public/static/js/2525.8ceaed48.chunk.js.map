{"version":3,"file":"static/js/2525.8ceaed48.chunk.js","mappings":"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","sources":["components/Breadcrumbs.tsx","components/HeaderBreadcrumbs.tsx","pages/masterData/tutorials/TutorialCreate.tsx"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Link,\r\n  Typography,\r\n  BreadcrumbsProps,\r\n  Breadcrumbs as MUIBreadcrumbs,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype TLink = {\r\n  href?: string;\r\n  name?: string;\r\n  icon?: ReactElement;\r\n};\r\n\r\nexport interface Props extends BreadcrumbsProps {\r\n  links: TLink[];\r\n  activeLast?: boolean;\r\n}\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={\r\n        <Box\r\n          component=\"span\"\r\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n        />\r\n      }\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype LinkItemProps = {\r\n  link: TLink;\r\n};\r\n\r\nfunction LinkItem({ link }: LinkItemProps) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import { ReactNode } from 'react';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface Props extends BreadcrumbsProps {\r\n  action?: ReactNode;\r\n  heading?: string;\r\n  moreLink?: string | string[];\r\n}\r\n\r\nexport default function HeaderBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink = '' || [],\r\n  sx,\r\n  ...other\r\n}: Props) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Card, Container, Grid, Typography, Box, Stack, useTheme } from '@mui/material';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { FormProvider, RHFSelectDropdown, RHFTextField } from 'src/components/hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport Iconify from 'src/components/Iconify';\r\nimport Page from 'src/components/Page';\r\nimport HeaderBreadcrumbs from 'src/components/HeaderBreadcrumbs';\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\nimport { TutorialType } from 'src/@types/tutorial';\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport { AddTutorials, emptyTutorialDetails, getTutorialsDetails } from 'src/redux/slices/tutorial';\r\n\r\nconst statusList = [\r\n  { id: 'active', label: 'Active', name: 'active' },\r\n  { id: 'inactive', label: 'Inactive', name: 'inactive' },\r\n];\r\n\r\nconst NewUserSchema = Yup.object().shape({\r\n  subject: Yup.string()\r\n    .required('Subject name is required')\r\n    .matches(/^[^\\s].*$/, 'First characters space not allowed.'),\r\n  description: Yup.string()\r\n    .required('Description is required')\r\n    .matches(/^[^\\s].*$/, 'First characters space not allowed.'),\r\n  status: Yup.string(),\r\n  videos: Yup.array()\r\n    .of(\r\n      Yup.object().shape({\r\n        url: Yup.string().required('Video URL is required'),\r\n        thumbnail: Yup.string().required('Thumbnail is required'),\r\n        status: Yup.string().required('Video status is required'),\r\n        name: Yup.string()\r\n          .required('Video name is required')\r\n          .matches(/^[^\\s].*$/, 'First Characters space not allowed.'),\r\n      })\r\n    )\r\n    .min(1, 'At least one video must be added'),\r\n});\r\n\r\nexport default function LocationCreate() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { tutorialDetails } = useSelector((state) => state.tutorials);\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetails();\r\n    }\r\n  }, []);\r\n\r\n  const getDetails = () => {\r\n    dispatch(getTutorialsDetails(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tutorialDetails && id) {\r\n      setAllDetails();\r\n    }\r\n  }, [tutorialDetails?.id]);\r\n\r\n  const setAllDetails = () => {\r\n    setValue('subject', tutorialDetails?.subject);\r\n    setValue('status', tutorialDetails?.status);\r\n    setValue('description', tutorialDetails?.description);\r\n    setValue('videos', tutorialDetails?.videos);\r\n  };\r\n\r\n  const defaultValues = {\r\n    subject: '',\r\n    description: '',\r\n    status: '',\r\n    videos: [{ url: '', thumbnail: '', status: '', name: '' }],\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    setValue,\r\n    clearErrors,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const videos = watch('videos');\r\n\r\n  const handleAddVideos = () => {\r\n    const newVideo = { url: '', thumbnail: '', status: '', name: '' };\r\n\r\n    setValue('videos', [...videos, newVideo]);\r\n    clearErrors('videos');\r\n  };\r\n\r\n  const handleDeleteVideos = (index: number) => {\r\n    if (videos?.length > 1) {\r\n      const updatedVideos = videos?.filter((_: any, i: number) => i !== index);\r\n      setValue('videos', updatedVideos);\r\n    } else if (videos?.length === 1) {\r\n      setValue(`videos.${index}.url`, '');\r\n      setValue(`videos.${index}.thumbnail`, '');\r\n      setValue(`videos.${index}.status`, '');\r\n    }\r\n  };\r\n\r\n  const handleVideoChange = (\r\n    index: number,\r\n    field: 'url' | 'thumbnail' | 'status' | 'name',\r\n    value: any\r\n  ) => {\r\n    const updatedVideos = [...videos];\r\n\r\n    if (field === 'status') {\r\n      updatedVideos[index][field] = watch(`videos.${index}.status`);\r\n      clearErrors(`videos.${index}.${field}`);\r\n    } else {\r\n      updatedVideos[index][field] = value;\r\n      clearErrors(`videos.${index}.${field}`);\r\n    }\r\n    setValue('videos', updatedVideos);\r\n  };\r\n\r\n  const onSubmit = async (data: TutorialType) => {\r\n    let previousState: any = {\r\n      subject: tutorialDetails?.subject,\r\n      description: tutorialDetails?.description,\r\n      status: tutorialDetails?.status,\r\n    };\r\n\r\n    let payload = {\r\n      subject: data?.subject,\r\n      description: data?.description,\r\n      status: data?.status,\r\n      videos: videos,\r\n    };\r\n\r\n    Object.keys(payload).forEach((key) => {\r\n      const typedKey = key as keyof typeof payload; \r\n      if (payload[typedKey] === previousState[typedKey]) {\r\n        delete payload[typedKey];\r\n      }\r\n    });\r\n\r\n    if (id) {\r\n      dispatch(AddTutorials(payload, id)).then((res: any) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          dispatch(emptyTutorialDetails());\r\n          navigate(PATH_DASHBOARD.masterdata.tutorial);\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(AddTutorials(payload)).then((res: any) => {\r\n        if (res?.data?.statusCode === 201) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          dispatch(emptyTutorialDetails());\r\n          navigate(PATH_DASHBOARD.masterdata.tutorial);\r\n        } else {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          dispatch(emptyTutorialDetails());\r\n          navigate(PATH_DASHBOARD.masterdata.tutorial);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDisabledVideos = () => {\r\n    const nonEmptyObjects = videos.some(\r\n      (obj) => obj?.status === '' || obj?.thumbnail === '' || obj?.url === '' || obj?.name === ''\r\n    );\r\n    return nonEmptyObjects;\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Add Training\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading={!id ? 'Add Training' : 'Edit Training details'}\r\n          links={[\r\n            { name: 'Training List', href: PATH_DASHBOARD.sevak.list },\r\n            { name: !id ? 'Add Training' : 'Edit Training' },\r\n          ]}\r\n        />\r\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Card sx={{ p: 3, boxShadow: '0 12px 24px rgba(0,0,0,0.18)' }}>\r\n                <Box\r\n                  sx={{\r\n                    display: 'grid',\r\n                    columnGap: 2,\r\n                    rowGap: 3,\r\n                    gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(1, 1fr)' },\r\n                  }}\r\n                >\r\n                  <RHFTextField name=\"subject\" label=\"Subject name\" />\r\n                  <RHFTextField name=\"description\" label=\"Description name\" />\r\n                  {/* <RHFSelectDropdown\r\n                    name=\"status\"\r\n                    label={'Select Status'}\r\n                    placeholder={'Status'}\r\n                    options={statusList}\r\n                  /> */}\r\n                </Box>\r\n\r\n                {/* tutorials urls */}\r\n                <Box>\r\n                  <LoadingButton\r\n                    onClick={handleAddVideos}\r\n                    disabled={handleDisabledVideos()}\r\n                    sx={{\r\n                      py: 1,\r\n                      width: '150px',\r\n                      display: 'flex',\r\n                      bgcolor: handleDisabledVideos() ? '#aaa' : theme.palette.primary.light,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      borderRadius: '10px',\r\n                      cursor: 'pointer',\r\n                      color: 'white',\r\n                      mt: 2,\r\n                      ':hover': {\r\n                        bgcolor: handleDisabledVideos() ? '#aaa' : theme.palette.primary.light,\r\n                        color: 'white',\r\n                      },\r\n                      ':disabled': {\r\n                        color: 'white',\r\n                      },\r\n                    }}\r\n                  >\r\n                    Add Videos\r\n                  </LoadingButton>\r\n                </Box>\r\n                <Box sx={{ p: 1, borderRadius: '10px' }}>\r\n                  {videos?.map((video: any, index: number) => (\r\n                    <Box\r\n                      key={index}\r\n                      sx={{\r\n                        boxShadow: '1px 2px 12px rgba(0,0,0,0.18)',\r\n                        p: 2,\r\n                        borderRadius: '10px',\r\n                        mt: 3,\r\n                      }}\r\n                    >\r\n                      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Typography variant=\"h5\" py={2}>\r\n                          Training Video {index + 1}\r\n                        </Typography>\r\n                        {index !== 0 && (\r\n                          <Iconify\r\n                            icon=\"uiw:delete\"\r\n                            sx={{ color: '#d23838', cursor: 'pointer' }}\r\n                            onClick={() => handleDeleteVideos(index)}\r\n                          />\r\n                        )}\r\n                      </Box>\r\n                      <Box\r\n                        sx={{\r\n                          display: 'grid',\r\n                          columnGap: 2,\r\n                          rowGap: 3,\r\n                          gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n                        }}\r\n                      >\r\n                        <RHFTextField\r\n                          name={`videos[${index}].name`}\r\n                          label=\"Video title\"\r\n                          value={video.name}\r\n                          onChange={(e) => handleVideoChange(index, 'name', e.target.value)}\r\n                        />\r\n                        <RHFTextField\r\n                          name={`videos[${index}].url`}\r\n                          label=\"Video URL\"\r\n                          value={video.url}\r\n                          onChange={(e) => handleVideoChange(index, 'url', e.target.value)}\r\n                        />\r\n                        <RHFTextField\r\n                          name={`videos[${index}].thumbnail`}\r\n                          label=\"Thumbnail url\"\r\n                          value={video.thumbnail}\r\n                          onChange={(e) => handleVideoChange(index, 'thumbnail', e.target.value)}\r\n                        />\r\n                        <RHFSelectDropdown\r\n                          name={`videos[${index}].status`}\r\n                          label=\"Status\"\r\n                          placeholder=\"Select status\"\r\n                          value={videos[index]?.status}\r\n                          options={statusList}\r\n                          onClick={(e: any) => handleVideoChange(index, 'status', e.target.value)}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n\r\n                <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    loading={isSubmitting}\r\n                    startIcon={\r\n                      <Iconify icon={!id ? 'mingcute:user-add-fill' : 'fa-solid:user-edit'} />\r\n                    }\r\n                  >\r\n                    {id ? 'Save' : 'Add'}\r\n                  </LoadingButton>\r\n                </Stack>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </FormProvider>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","statusList","id","label","NewUserSchema","Yup","shape","subject","required","matches","description","status","videos","of","url","thumbnail","min","LocationCreate","useParams","navigate","useNavigate","dispatch","useDispatch","theme","useTheme","enqueueSnackbar","useSnackbar","tutorialDetails","useSelector","state","tutorials","useEffect","getDetails","getTutorialsDetails","setAllDetails","setValue","methods","useForm","resolver","yupResolver","defaultValues","watch","reset","clearErrors","handleSubmit","isSubmitting","formState","handleVideoChange","index","field","value","updatedVideos","onSubmit","data","previousState","payload","Object","keys","forEach","key","typedKey","AddTutorials","then","res","statusCode","message","emptyTutorialDetails","PATH_DASHBOARD","handleDisabledVideos","some","obj","title","container","spacing","item","xs","p","boxShadow","columnGap","rowGap","gridTemplateColumns","sm","onClick","disabled","py","palette","primary","light","justifyContent","cursor","video","filter","_","i","handleDeleteVideos","onChange","e","placeholder","options","type","loading","startIcon"],"sourceRoot":""}