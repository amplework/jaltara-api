{"version":3,"file":"static/js/7003.29dd0807.chunk.js","mappings":"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","sources":["components/modal/Confirmation.tsx","hooks/useTable.ts","hooks/useTabs.ts","sections/@dashboard/user/list/TutorialTableRow.tsx","pages/masterData/tutorials/TutorialList.tsx","pages/sevak/DeleteConfirmationContent.tsx"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Box, Container, Divider, Modal, Stack, Typography, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport Iconify from '../Iconify';\r\nimport { SkeletonPost } from '../skeleton';\r\n\r\ninterface ConfirmationModalProps {\r\n  openModal: boolean;\r\n  handleClose?: VoidFunction;\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n  title: string;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 550,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '10px',\r\n};\r\n\r\nconst ConfirmationModal = ({\r\n  openModal,\r\n  handleClose,\r\n  handleSubmit,\r\n  children,\r\n  title = 'Add New Crop',\r\n  disabled,\r\n  isLoading,\r\n}: ConfirmationModalProps) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      disableEnforceFocus={false}\r\n      disableAutoFocus={false}\r\n      sx={{ outline: 0 }}\r\n    >\r\n      <Container\r\n        sx={{\r\n          maxWidth: {\r\n            xl: '2600px',\r\n            position: 'relative',\r\n            borderRadius: '20px',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={style}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            borderRadius={'10px 10px 0 0'}\r\n            p={2}\r\n            bgcolor={theme.palette.primary.lighter}\r\n          >\r\n            <Typography variant=\"h6\" color={theme.palette.grey[0]} sx={{ letterSpacing: '0.7px' }}>\r\n              {title}\r\n            </Typography>\r\n            <LoadingButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                minWidth: 0,\r\n                padding: 0.2,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                borderRadius: '50%',\r\n                bgcolor: theme.palette.common.white,\r\n                ':hover': {\r\n                  bgcolor: theme.palette.common.white,\r\n                },\r\n              }}\r\n            >\r\n              <Iconify\r\n                icon=\"iconamoon:close-bold\"\r\n                width={24}\r\n                height={24}\r\n                color={theme.palette.common.black}\r\n              />\r\n            </LoadingButton>\r\n          </Box>\r\n\r\n          <Divider />\r\n          {/* Content */}\r\n          {isLoading ? (\r\n            <SkeletonPost />\r\n          ) : (\r\n            <Box\r\n              mt={2}\r\n              //  sx={{ minHeight: 300 }}\r\n            >\r\n              {children}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Footer */}\r\n          <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" p={2}>\r\n            <LoadingButton variant=\"outlined\" onClick={handleClose} fullWidth sx={{ p: 1 }}>\r\n              Cancel\r\n            </LoadingButton>\r\n            <LoadingButton\r\n              variant=\"contained\"\r\n              disabled={disabled}\r\n              onClick={handleSubmit}\r\n              fullWidth\r\n              sx={{ p: 1 }}\r\n            >\r\n              {'Delete'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Box>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type UseTableProps = {\r\n  dense: boolean;\r\n  page: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n  rowsPerPage: number;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  //\r\n  selected: string[];\r\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\r\n  onSelectRow: (id: string) => void;\r\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void;\r\n  //\r\n  onSort: (id: string) => void;\r\n  onChangePage: (event: unknown, newPage: number) => void;\r\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nexport type Props = {\r\n  defaultDense?: boolean;\r\n  defaultOrder?: 'asc' | 'desc';\r\n  defaultOrderBy?: string;\r\n  defaultSelected?: string[];\r\n  defaultRowsPerPage?: number;\r\n  defaultCurrentPage?: number;\r\n};\r\n\r\nexport default function useTable(props?: Props) {\r\n  const [dense, setDense] = useState(props?.defaultDense || false);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\r\n\r\n  const onSort = (id: string) => {\r\n    const isAsc = orderBy === id && order === 'asc';\r\n    if (id !== '') {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(id);\r\n    }\r\n  };\r\n\r\n  const onSelectRow = (id: string) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const onSelectAllRows = (checked: boolean, newSelecteds: string[]) => {\r\n    if (checked) {\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const onChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    setPage,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onChangeRowsPerPage,\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (typeof orderBy === \"string\") {\r\n    const aValue = orderBy.split(\".\").reduce((o: any, i) => o[i], a);\r\n    const bValue = orderBy.split(\".\").reduce((o: any, i) => o[i], b);\r\n\r\n    if (bValue < aValue) {\r\n      return -1;\r\n    }\r\n    if (bValue > aValue) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  } else {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport function getComparator<Key extends keyof any>(\r\n  order: 'asc' | 'desc',\r\n  orderBy: Key\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\r\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTabs(defaultValues?: string) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event: React.SyntheticEvent<Element, Event>, newValue: string) => {\r\n      setCurrentTab(newValue);\r\n    },\r\n    setCurrentTab,\r\n  };\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Checkbox, TableRow, TableCell, Typography, MenuItem } from '@mui/material';\r\n// @types\r\n// components\r\nimport { CropItem } from 'src/@types/crops';\r\nimport _ from 'lodash';\r\nimport { formatedDate } from 'src/utils/formateDate';\r\nimport { TableMoreMenu } from 'src/components/table';\r\nimport Iconify from 'src/components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  row: any | null;\r\n  onDeleteRow?: (id: any,name:any) => void;\r\n  onEditRow?: (id: any) => void;\r\n  handleShowDetails?: (id: any) => void;\r\n};\r\n\r\nexport default function TutorialTableRow({\r\n  row,\r\n  onDeleteRow,\r\n  handleShowDetails,\r\n  onEditRow,\r\n}: Props) {\r\n  const theme = useTheme();\r\n\r\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setOpenMenuActions(event.currentTarget);\r\n  };\r\n  const handleCloseMenu = () => {\r\n    setOpenMenuActions(null);\r\n  };\r\n\r\n  const { subject, status, id, videos } = row || {};\r\n\r\n  return (\r\n    <TableRow hover>\r\n      <TableCell onClick={() => handleShowDetails && handleShowDetails(id)}>\r\n        <Typography variant=\"subtitle2\" noWrap sx={{ cursor: 'pointer' }}>\r\n          {_.capitalize(subject) || 'N/A'}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {_.capitalize(videos?.length) || 'N/A'}\r\n        </Typography>\r\n      </TableCell>\r\n      {/* <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {_.capitalize(status) || 'N/A'}\r\n        </Typography>\r\n      </TableCell> */}\r\n      <TableCell align=\"left\">\r\n        <TableMoreMenu\r\n          open={openMenu}\r\n          onOpen={handleOpenMenu}\r\n          onClose={handleCloseMenu}\r\n          actions={\r\n            <>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onEditRow && onEditRow(id);\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                <Iconify icon={'eva:edit-fill'} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onDeleteRow && onDeleteRow(id,subject);\r\n                  handleCloseMenu();\r\n                }}\r\n                sx={{ color: 'error.main' }}\r\n              >\r\n                <Iconify icon={'eva:trash-2-outline'} />\r\n                Delete\r\n              </MenuItem>\r\n            </>\r\n          }\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  TableBody,\r\n  Container,\r\n  TableContainer,\r\n  TablePagination,\r\n} from '@mui/material';\r\n// routes\r\n\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport { deleteCrops, getCropsList } from 'src/redux/slices/crops';\r\nimport { useSnackbar } from 'notistack';\r\nimport useTable from 'src/hooks/useTable';\r\nimport useTabs from 'src/hooks/useTabs';\r\nimport Page from 'src/components/Page';\r\nimport HeaderBreadcrumbs from 'src/components/HeaderBreadcrumbs';\r\nimport { PATH_DASHBOARD } from 'src/routes/paths';\r\nimport Iconify from 'src/components/Iconify';\r\nimport Scrollbar from 'src/components/Scrollbar';\r\nimport { TableHeadCustom, TableNoData } from 'src/components/table';\r\nimport TutorialTableRow from 'src/sections/@dashboard/user/list/TutorialTableRow';\r\nimport { deleteTutorial, emptyTutorialDetails, getTutorialList } from 'src/redux/slices/tutorial';\r\nimport LoadingScreen from 'src/components/LoadingScreen';\r\nimport ConfirmationModal from 'src/components/modal/Confirmation';\r\nimport { DeleteConfirmationContent } from 'src/pages/sevak/DeleteConfirmationContent';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const statusList = [\r\n  { id: 'active', label: 'Active', name: 'active' },\r\n  { id: 'inactive', label: 'Inactive', name: 'inactive' },\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'tutorial', label: 'Training Subject Name', align: 'left' },\r\n  { id: 'video', label: 'Video Count', align: 'left' },\r\n  // { id: 'status', label: 'Status', align: 'left' },\r\n  { id: 'action', label: 'Action', align: 'left' },\r\n];\r\n\r\nexport default function TutorialsList() {\r\n  const {\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    selected,\r\n    onSelectRow,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n  } = useTable();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [state, setState] = useState({\r\n    openModal: false,\r\n    filterName: '',\r\n    filterStatus: '',\r\n    id: '',\r\n    openDeleteModal: false,\r\n    TutorialName: '',\r\n  });\r\n\r\n  const { currentTab: filterStatus } = useTabs('all');\r\n\r\n  useEffect(() => {\r\n    handleTutorialListing();\r\n  }, []);\r\n\r\n  const handleTutorialListing = () => {\r\n    getTutorialList();\r\n  };\r\n\r\n  const { tutorialList, isLoading } = useSelector((state) => state.tutorials);\r\n\r\n  const onSearch = () => {\r\n    getCropsList(state.filterName, state.filterStatus);\r\n  };\r\n\r\n  const handleFilterName = (filterName: string) => {\r\n    setState((prev) => ({ ...prev, filterName: filterName }));\r\n  };\r\n\r\n  const handleShowDetails = (id: string) => {\r\n    emptyTutorialDetails();\r\n    navigate(PATH_DASHBOARD.masterdata.tutorialDetails(id));\r\n  };\r\n\r\n  const isNotFound =\r\n    (!tutorialList?.length && !!state.filterName) ||\r\n    (!tutorialList?.length && !!state.filterStatus) ||\r\n    (!tutorialList?.length && !!state.filterName) ||\r\n    (!tutorialList?.length && !!filterStatus);\r\n\r\n  const handleAddCrop = () => {\r\n    emptyTutorialDetails();\r\n    navigate(PATH_DASHBOARD.masterdata.tutorialCreate);\r\n  };\r\n\r\n  const onDeleteRow = (id: string,name:string) => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: true, id: id, TutorialName: name }));\r\n  };\r\n\r\n  const onEditRow = (id: string) => {\r\n    emptyTutorialDetails();\r\n    navigate(PATH_DASHBOARD.masterdata.tutorialEdit(id));\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: false, id: '', TutorialName: '' }));\r\n  };\r\n\r\n   const handleDeleteTutorial = () => {\r\n    dispatch(deleteTutorial(state?.id))\r\n      .then((res) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          handleTutorialListing();\r\n          setState((prev) => ({ ...prev, openDeleteModal: false, id: '', TutorialName: '' }));\r\n\r\n        } else {\r\n          handleTutorialListing();\r\n          setState((prev) => ({ ...prev, openDeleteModal: false, id: '', TutorialName: '' }));\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('error');\r\n      });\r\n    };\r\n\r\n  return (\r\n    <Page title=\"Training List\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Training List\"\r\n          links={[{ href: PATH_DASHBOARD.masterdata.create }]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\r\n              onClick={handleAddCrop}\r\n            >\r\n              Add Training\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card sx={{ pt:2 }}>\r\n          {/* <UserTableToolbar\r\n            filterName={state.filterName}\r\n            filterVillage={state.filterStatus}\r\n            onFilterName={handleFilterName}\r\n            onSearch={onSearch}\r\n            placeholderText={'Search by crop name'}\r\n            placeholderTextSecond={'Search by status'}\r\n            challenges={true}\r\n            state={state}\r\n            onChange={onChange}\r\n          /> */}\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800, position: 'relative' }}>\r\n              <Table size={'medium'}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tutorialList?.length}\r\n                  numSelected={selected.length}\r\n                />\r\n\r\n                <TableBody>\r\n                  {tutorialList?.length\r\n                    ? tutorialList\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row: any) => (\r\n                          <TutorialTableRow\r\n                            key={row.id}\r\n                            row={row}\r\n                            onDeleteRow={onDeleteRow}\r\n                            onEditRow={onEditRow}\r\n                            handleShowDetails={handleShowDetails}\r\n                          />\r\n                        ))\r\n                    : null}\r\n\r\n                  {isLoading ? (\r\n                    <LoadingScreen isDashboard={true} />\r\n                  ) : (\r\n                    <TableNoData isNotFound={isNotFound && !isLoading} />\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <Box sx={{ position: 'relative' }}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={tutorialList?.length ? tutorialList.length : 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={onChangePage}\r\n              onRowsPerPageChange={onChangeRowsPerPage}\r\n            />\r\n          </Box>\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmationModal\r\n        openModal={state.openDeleteModal}\r\n        // isLoading={isLoading}\r\n        handleClose={handleDeleteClose}\r\n        title={'Delete Confirmation!'}\r\n        handleSubmit={handleDeleteTutorial}\r\n      >\r\n        <DeleteConfirmationContent userName={state?.TutorialName} />\r\n      </ConfirmationModal>\r\n    </Page>\r\n  );\r\n}\r\n","import { Box, Typography, Button } from '@mui/material';\r\nimport Iconify from 'src/components/Iconify';\r\n\r\ninterface DeleteConfirmationProps {\r\n  userName: string;\r\n}\r\n\r\nexport const DeleteConfirmationContent = ({\r\n  userName,\r\n}: DeleteConfirmationProps) => (\r\n  <Box\r\n    sx={{\r\n      p: 2,\r\n      minHeight: '180px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      textAlign: 'center',\r\n    }}\r\n  >\r\n    {/* Icon Box */}\r\n    <Box\r\n      sx={{\r\n        width: 80,\r\n        height: 80,\r\n        borderRadius: '50%',\r\n        backgroundColor: '#FDECF2', \r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      <Iconify  \r\n        icon=\"mingcute:delete-2-line\"\r\n        sx={{ fontSize: 32, color: '#E91E63' }} \r\n      />\r\n    </Box>\r\n\r\n    {/* Confirmation Text */}\r\n    <Typography\r\n      variant=\"h6\"\r\n      sx={{\r\n        fontWeight: 'bold',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      Are you sure you want to remove {userName}?\r\n    </Typography>\r\n\r\n  </Box>\r\n);\r\n"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","borderRadius","openModal","handleClose","handleSubmit","children","title","disabled","isLoading","theme","useTheme","open","onClose","disableEnforceFocus","disableAutoFocus","sx","outline","maxWidth","xl","height","display","justifyContent","alignItems","p","palette","primary","lighter","variant","color","grey","letterSpacing","onClick","minWidth","padding","common","white","icon","black","mt","direction","spacing","fullWidth","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","orderBy","setOrderBy","defaultOrder","order","setOrder","defaultCurrentPage","page","setPage","defaultRowsPerPage","rowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSelectRow","id","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onSort","onChangePage","event","newPage","onChangeDense","target","onChangeRowsPerPage","parseInt","value","useTabs","defaultValues","currentTab","setCurrentTab","onChangeTab","newValue","TutorialTableRow","row","onDeleteRow","handleShowDetails","onEditRow","openMenu","setOpenMenuActions","handleCloseMenu","subject","status","videos","TableRow","hover","TableCell","Typography","noWrap","cursor","_","align","onOpen","currentTarget","actions","MenuItem","Iconify","statusList","label","name","TABLE_HEAD","TutorialsList","enqueueSnackbar","useSnackbar","dispatch","useDispatch","navigate","useNavigate","filterName","filterStatus","openDeleteModal","TutorialName","state","setState","useEffect","handleTutorialListing","getTutorialList","useSelector","tutorials","tutorialList","emptyTutorialDetails","PATH_DASHBOARD","isNotFound","prev","Page","Container","HeaderBreadcrumbs","heading","links","href","action","Button","startIcon","Card","pt","Scrollbar","TableContainer","Table","size","headLabel","rowCount","numSelected","TableBody","map","LoadingScreen","isDashboard","Box","TablePagination","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","Confirmation","deleteTutorial","then","res","data","statusCode","message","catch","error","console","log","DeleteConfirmationContent","userName","minHeight","flexDirection","textAlign","backgroundColor","mb","fontSize","fontWeight"],"sourceRoot":""}