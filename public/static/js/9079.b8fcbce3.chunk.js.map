{"version":3,"file":"static/js/9079.b8fcbce3.chunk.js","mappings":"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","sources":["components/modal/Confirmation.tsx","components/modal/MasterDataForm.tsx","hooks/useTable.ts","hooks/useTabs.ts","mockUp/Sevak.ts","sections/@dashboard/user/list/ChallangesRow.tsx","pages/masterData/form/ChallengesForm.tsx","pages/masterData/cropsChallanges/ChallangesList.tsx","pages/sevak/DeleteConfirmationContent.tsx","sections/@dashboard/user/list/SevakTableRow.tsx","sections/@dashboard/user/list/UserTableToolbar.tsx","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Box, Container, Divider, Modal, Stack, Typography, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport Iconify from '../Iconify';\r\nimport { SkeletonPost } from '../skeleton';\r\n\r\ninterface ConfirmationModalProps {\r\n  openModal: boolean;\r\n  handleClose?: VoidFunction;\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n  title: string;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 550,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '10px',\r\n};\r\n\r\nconst ConfirmationModal = ({\r\n  openModal,\r\n  handleClose,\r\n  handleSubmit,\r\n  children,\r\n  title = 'Add New Crop',\r\n  disabled,\r\n  isLoading,\r\n}: ConfirmationModalProps) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      disableEnforceFocus={false}\r\n      disableAutoFocus={false}\r\n      sx={{ outline: 0 }}\r\n    >\r\n      <Container\r\n        sx={{\r\n          maxWidth: {\r\n            xl: '2600px',\r\n            position: 'relative',\r\n            borderRadius: '20px',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={style}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            borderRadius={'10px 10px 0 0'}\r\n            p={2}\r\n            bgcolor={theme.palette.primary.lighter}\r\n          >\r\n            <Typography variant=\"h6\" color={theme.palette.grey[0]} sx={{ letterSpacing: '0.7px' }}>\r\n              {title}\r\n            </Typography>\r\n            <LoadingButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                minWidth: 0,\r\n                padding: 0.2,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                borderRadius: '50%',\r\n                bgcolor: theme.palette.common.white,\r\n                ':hover': {\r\n                  bgcolor: theme.palette.common.white,\r\n                },\r\n              }}\r\n            >\r\n              <Iconify\r\n                icon=\"iconamoon:close-bold\"\r\n                width={24}\r\n                height={24}\r\n                color={theme.palette.common.black}\r\n              />\r\n            </LoadingButton>\r\n          </Box>\r\n\r\n          <Divider />\r\n          {/* Content */}\r\n          {isLoading ? (\r\n            <SkeletonPost />\r\n          ) : (\r\n            <Box\r\n              mt={2}\r\n              //  sx={{ minHeight: 300 }}\r\n            >\r\n              {children}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Footer */}\r\n          <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" p={2}>\r\n            <LoadingButton variant=\"outlined\" onClick={handleClose} fullWidth sx={{ p: 1 }}>\r\n              Cancel\r\n            </LoadingButton>\r\n            <LoadingButton\r\n              variant=\"contained\"\r\n              disabled={disabled}\r\n              onClick={handleSubmit}\r\n              fullWidth\r\n              sx={{ p: 1 }}\r\n            >\r\n              {'Delete'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Box>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { LoadingButton } from '@mui/lab';\r\nimport { Box, Container, Divider, Modal, Stack, Typography, useTheme } from '@mui/material';\r\nimport React, { useEffect } from 'react';\r\nimport Iconify from '../Iconify';\r\nimport { FormProvider } from '../hook-form';\r\nimport { CropItem } from 'src/@types/crops';\r\nimport { ChallangesItem } from 'src/@types/challanges';\r\nimport { startLoading } from 'src/redux/slices/crops';\r\nimport { useDispatch } from 'src/redux/store';\r\nimport { SkeletonPost, SkeletonProduct } from '../skeleton';\r\n\r\ninterface MasterDataFormProps {\r\n  openModal: boolean;\r\n  handleClose?: VoidFunction;\r\n  children?: React.ReactNode;\r\n  title?: string;\r\n  methods: any;\r\n  onSubmit: any;\r\n  id?: string;\r\n  handleCropDetails?: any;\r\n  cropDetails?: CropItem | ChallangesItem;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 550,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '10px',\r\n};\r\n\r\nconst MasterDataForm = ({\r\n  openModal,\r\n  handleClose,\r\n  children,\r\n  methods,\r\n  onSubmit,\r\n  id,\r\n  cropDetails,\r\n  handleCropDetails,\r\n  title = 'Add New Crop',\r\n  disabled,\r\n  isLoading,\r\n}: MasterDataFormProps) => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(startLoading());\r\n      handleCropDetails();\r\n    }\r\n  }, [id]);\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      disableEnforceFocus={false}\r\n      disableAutoFocus={false}\r\n      sx={{ outline: 0 }}\r\n    >\r\n      <Container\r\n        sx={{\r\n          maxWidth: {\r\n            xl: '2600px',\r\n            position: 'relative',\r\n            borderRadius: '20px',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={style}>\r\n          <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Header */}\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              borderRadius={'10px 10px 0 0'}\r\n              p={2}\r\n              bgcolor={theme.palette.primary.lighter}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                color={theme.palette.grey[0]}\r\n                sx={{ letterSpacing: '0.7px' }}\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <LoadingButton\r\n                onClick={handleClose}\r\n                sx={{\r\n                  minWidth: 0,\r\n                  padding: 0.2,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  borderRadius: '50%',\r\n                  bgcolor: theme.palette.common.white,\r\n                  ':hover': {\r\n                    bgcolor: theme.palette.common.white,\r\n                  },\r\n                }}\r\n              >\r\n                <Iconify\r\n                  icon=\"iconamoon:close-bold\"\r\n                  width={24}\r\n                  height={24}\r\n                  color={theme.palette.common.black}\r\n                />\r\n              </LoadingButton>\r\n            </Box>\r\n\r\n            <Divider />\r\n            {/* Content */}\r\n            {isLoading ? (\r\n              <SkeletonPost />\r\n            ) : (\r\n              <Box\r\n                mt={2}\r\n                //  sx={{ minHeight: 300 }}\r\n              >\r\n                {children}\r\n              </Box>\r\n            )}\r\n\r\n            {/* Footer */}\r\n            <Divider />\r\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" p={2}>\r\n              <LoadingButton variant=\"outlined\" onClick={handleClose}>\r\n                Cancel\r\n              </LoadingButton>\r\n              <LoadingButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={disabled}\r\n                startIcon={<Iconify icon={!id ? 'mingcute:user-add-fill' : 'fa-solid:user-edit'} />}\r\n              >\r\n                {id ? 'Save' : 'Add'}\r\n              </LoadingButton>\r\n            </Stack>\r\n          </FormProvider>\r\n        </Box>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MasterDataForm;\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type UseTableProps = {\r\n  dense: boolean;\r\n  page: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n  rowsPerPage: number;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  //\r\n  selected: string[];\r\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\r\n  onSelectRow: (id: string) => void;\r\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void;\r\n  //\r\n  onSort: (id: string) => void;\r\n  onChangePage: (event: unknown, newPage: number) => void;\r\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nexport type Props = {\r\n  defaultDense?: boolean;\r\n  defaultOrder?: 'asc' | 'desc';\r\n  defaultOrderBy?: string;\r\n  defaultSelected?: string[];\r\n  defaultRowsPerPage?: number;\r\n  defaultCurrentPage?: number;\r\n};\r\n\r\nexport default function useTable(props?: Props) {\r\n  const [dense, setDense] = useState(props?.defaultDense || false);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\r\n\r\n  const onSort = (id: string) => {\r\n    const isAsc = orderBy === id && order === 'asc';\r\n    if (id !== '') {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(id);\r\n    }\r\n  };\r\n\r\n  const onSelectRow = (id: string) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const onSelectAllRows = (checked: boolean, newSelecteds: string[]) => {\r\n    if (checked) {\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const onChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    setPage,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onChangeRowsPerPage,\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (typeof orderBy === \"string\") {\r\n    const aValue = orderBy.split(\".\").reduce((o: any, i) => o[i], a);\r\n    const bValue = orderBy.split(\".\").reduce((o: any, i) => o[i], b);\r\n\r\n    if (bValue < aValue) {\r\n      return -1;\r\n    }\r\n    if (bValue > aValue) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  } else {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport function getComparator<Key extends keyof any>(\r\n  order: 'asc' | 'desc',\r\n  orderBy: Key\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\r\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTabs(defaultValues?: string) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event: React.SyntheticEvent<Element, Event>, newValue: string) => {\r\n      setCurrentTab(newValue);\r\n    },\r\n    setCurrentTab,\r\n  };\r\n}\r\n","export const sevekTableHeader = [\r\n  { id: 'name', label: 'Name', align: 'left' },\r\n  { id: 'phone', label: 'Phone', align: 'left' },\r\n  { id: 'lan', label: 'Language', align: 'left' },\r\n  { id: 'village', label: 'Village', align: 'left' },\r\n  { id: 'status', label: 'Status', align: 'left' },\r\n  { id: 'action', label: 'Action', align: 'left' },\r\n];\r\n\r\nexport const languageList = [\r\n  { id: 'hi', label: 'हिन्दी', name: 'हिन्दी' },\r\n  { id: 'mr', label: 'मराठी', name: 'मराठी' },\r\n  { id: 'en', label: 'English', name: 'english' },\r\n];\r\n","import { useState } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Checkbox, TableRow, TableCell, Typography, MenuItem } from '@mui/material';\r\n// @types\r\nimport { UserItem } from '../../../../@types/user';\r\n// components\r\nimport Label from '../../../../components/Label';\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { TableMoreMenu } from '../../../../components/table';\r\nimport palette from 'src/theme/palette';\r\nimport { Box } from '@mui/material';\r\nimport { FarmerListData } from 'src/@types/farmer';\r\nimport Image from 'src/components/Image';\r\nimport { ChallangesItem } from 'src/@types/challanges';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  row: ChallangesItem | null;\r\n  onEditRow: (id: any) => void;\r\n  onDeleteRow?: (id: any,name:any) => void;\r\n  handleShowDetails?: (id: any) => void;\r\n};\r\n\r\nexport default function ChallangesTableRow({\r\n  row,\r\n  onEditRow,\r\n  handleShowDetails,\r\n  onDeleteRow,\r\n}: Props) {\r\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setOpenMenuActions(event.currentTarget);\r\n  };\r\n  const handleCloseMenu = () => {\r\n    setOpenMenuActions(null);\r\n  };\r\n\r\n  const { status, challenge, id } = row || {};\r\n\r\n  return (\r\n    <TableRow hover>\r\n      <TableCell onClick={() => handleShowDetails && handleShowDetails(id)}>\r\n        <Typography variant=\"subtitle2\" noWrap sx={{ textTransform: 'capitalize' }}>\r\n          {challenge}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell onClick={() => handleShowDetails && handleShowDetails(id)}>\r\n        <Typography variant=\"subtitle2\" noWrap sx={{ textTransform:\"capitalize\" }}>\r\n          {status}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell align=\"left\">\r\n        <TableMoreMenu\r\n          open={openMenu}\r\n          onOpen={handleOpenMenu}\r\n          onClose={handleCloseMenu}\r\n          actions={\r\n            <>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onEditRow && onEditRow(id);\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                <Iconify icon={'eva:edit-fill'} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onDeleteRow && onDeleteRow(id,challenge);\r\n                  handleCloseMenu();\r\n                }}\r\n                sx={{ color: 'error.main' }}\r\n              >\r\n                <Iconify icon={'eva:trash-2-outline'} />\r\n                Delete\r\n              </MenuItem>\r\n            </>\r\n          }\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { RHFSelectDropdown, RHFTextField } from 'src/components/hook-form';\r\ninterface CropAddEditFormProp {\r\n  statusList?: any;\r\n  methods?: any;\r\n}\r\nconst ChallengesForm = ({ statusList, methods }: CropAddEditFormProp) => {\r\n  const { watch } = methods;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'grid',\r\n        columnGap: 2,\r\n        rowGap: 3,\r\n        gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(1, 1fr)' },\r\n        p: 2,\r\n      }}\r\n    >\r\n      <RHFTextField name=\"challenge\" label=\"Crop Challenges\" />\r\n      <RHFSelectDropdown\r\n        name=\"status\"\r\n        label={'Status'}\r\n        placeholder={'Status'}\r\n        value={watch('status')}\r\n        options={statusList}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChallengesForm;\r\n","import * as Yup from 'yup';\r\nimport { useEffect, useMemo, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  TableBody,\r\n  Container,\r\n  TableContainer,\r\n  TablePagination,\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// hooks\r\nimport useTabs from '../../../hooks/useTabs';\r\nimport useTable from '../../../hooks/useTable';\r\n// components\r\nimport Page from '../../../components/Page';\r\nimport Iconify from '../../../components/Iconify';\r\nimport Scrollbar from '../../../components/Scrollbar';\r\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\r\nimport { TableNoData, TableHeadCustom } from '../../../components/table';\r\n// sections\r\nimport { UserTableToolbar } from '../../../sections/@dashboard/user/list';\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport MasterDataForm from 'src/components/modal/MasterDataForm';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport ChallangesTableRow from 'src/sections/@dashboard/user/list/ChallangesRow';\r\nimport {\r\n  addEditCropsChallenges,\r\n  deleteCropsChallanges,\r\n  emptyCropsChallengesDetails,\r\n  getCropsChallangesDetails,\r\n  getCropsChallengesList,\r\n} from 'src/redux/slices/challanges';\r\nimport { ChallangesItem } from 'src/@types/challanges';\r\nimport ChallengesForm from '../form/ChallengesForm';\r\nimport ConfirmationModal from 'src/components/modal/Confirmation';\r\nimport { DeleteConfirmationContent } from 'src/pages/sevak/DeleteConfirmationContent';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const statusChallangesList = [\r\n  { id: 'active', label: 'Active', name: 'active' },\r\n  { id: 'inactive', label: 'Inactive', name: 'inactive' },\r\n];\r\n\r\nexport const statusList = [\r\n  { id: 'state', label: 'State', name: 'State', value: 'state' },\r\n  { id: 'district', label: 'District', name: 'District', value: 'district' },\r\n  { id: 'taluk', label: 'Taluk', name: 'Taluk', value: 'taluk' },\r\n  { id: 'village', label: 'Village', name: 'Village', value: 'village' },\r\n];\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'challenges', label: 'Challenge', align: 'left' },\r\n  { id: 'status', label: 'Status', align: 'left' },\r\n  { id: 'action', label: 'Action', align: 'left' },\r\n];\r\n\r\nexport default function ChallangesList() {\r\n  const {\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    selected,\r\n    onSelectRow,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n    setPage,\r\n  } = useTable();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    openModal: false,\r\n    filterChallenge: '',\r\n    filterStatus: '',\r\n    id: '',\r\n    openDeleteModal: false,\r\n    cropsChallangesName: '',\r\n    \r\n  });\r\n\r\n  const { currentTab: filterStatus } = useTabs('all');\r\n\r\n  useEffect(() => {\r\n    handleCropListing();\r\n  }, []);\r\n\r\n  const handleCropListing = () => {\r\n    getCropsChallengesList();\r\n  };\r\n\r\n  const { challengesListData, challengesDetails } = useSelector((state) => state.challenges);\r\n\r\n  const onSearch = () => {\r\n    setPage(0);\r\n    getCropsChallengesList(state.filterChallenge, state.filterStatus);\r\n  };\r\n\r\n  const handleFilterChallenge = (filterChallenge: string) => {\r\n    setState((prev) => ({ ...prev, filterChallenge: filterChallenge }));\r\n  };\r\n\r\n  const onChange = (value: any) => {\r\n    setState((prev) => ({ ...prev, filterStatus: value }));\r\n  };\r\n\r\n  const handleCropDetails = () => {\r\n    dispatch(getCropsChallangesDetails(state?.id));\r\n  };\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      challenge: '',\r\n      status: '',\r\n    }),\r\n    [challengesDetails]\r\n  );\r\n\r\n  const NewCropsSchema = Yup.object().shape({\r\n    challenge: Yup.string().required('Challenge is required').max(50, 'Limit of 50 characters'),\r\n    status: Yup.string().required('Status is required'),\r\n  });\r\n\r\n  const methods = useForm<ChallangesItem>({\r\n    resolver: yupResolver(NewCropsSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const { watch, setValue } = methods;\r\n\r\n  useEffect(() => {\r\n    setValue('challenge', challengesDetails?.challenge);\r\n    setValue('status', challengesDetails?.status);\r\n  }, [challengesDetails]);\r\n\r\n  const isNotFound =\r\n    (!challengesListData?.length && !!state.filterChallenge) ||\r\n    (!challengesListData?.length && !!state.filterStatus) ||\r\n    (!challengesListData?.length && !!state.filterChallenge) ||\r\n    (!challengesListData?.length && !!filterStatus);\r\n\r\n  const handleAddCrop = () => {\r\n    dispatch(emptyCropsChallengesDetails(null));\r\n    setState((prev) => ({ ...prev, openModal: true, id: '' }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState((prev) => ({ ...prev, openModal: false, id: '' }));\r\n  };\r\n\r\n  const onDeleteRow = (id: string, name: string) => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: true, id: id, cropsChallangesName: name }));\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: false, id: '', cropsChallangesName: '' }));\r\n  };\r\n\r\n  const handleDeleteCropsChallanges = () => {\r\n    dispatch(deleteCropsChallanges(state?.id))\r\n      .then((res) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message||'Crops challanges delete successfully ', {\r\n            variant: 'success',\r\n          });\r\n          handleCropListing();\r\n          setState((prev) => ({\r\n            ...prev,\r\n            openDeleteModal: false,\r\n            id: '',\r\n            cropsChallangesName: '',\r\n          }));\r\n        } else {\r\n          enqueueSnackbar(res?.data?.message||'Crops challanges delete successfully ', {\r\n            variant: 'success',\r\n          });\r\n          handleCropListing();\r\n          setState((prev) => ({\r\n            ...prev,\r\n            openDeleteModal: false,\r\n            id: '',\r\n            cropsChallangesName: '',\r\n          }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('error');\r\n      });\r\n  };\r\n\r\n  const onEditRow = (id: string) => {\r\n    dispatch(emptyCropsChallengesDetails(null));\r\n    setState((prev) => ({ ...prev, openModal: true, id: id }));\r\n  };\r\n\r\n  const onSubmit = async (data: ChallangesItem) => {\r\n    try {\r\n      let previousState: any = {\r\n        challenge: challengesDetails?.challenge,\r\n        status: challengesDetails?.status,\r\n      };\r\n      let payload: any = {\r\n        challenge: data?.challenge,\r\n        status: data?.status,\r\n      };\r\n      Object.keys(payload).forEach((key) => {\r\n        if (payload[key] === previousState[key]) {\r\n          delete payload[key];\r\n        }\r\n      });\r\n\r\n      if (state?.id) {\r\n        dispatch(addEditCropsChallenges(payload, state.id)).then((res: any) => {\r\n          if (res?.data?.statusCode === 200) {\r\n            enqueueSnackbar(res?.data?.message, {\r\n              variant: 'success',\r\n            });\r\n            handleCropListing();\r\n            setState((prev) => ({ ...prev, openModal: false, id: '' }));\r\n          }\r\n        });\r\n      } else {\r\n        dispatch(addEditCropsChallenges(payload)).then((res: any) => {\r\n          if (res?.data?.statusCode === 201) {\r\n            enqueueSnackbar(res?.data?.message, {\r\n              variant: 'success',\r\n            });\r\n            handleCropListing();\r\n            setState((prev) => ({ ...prev, openModal: false, id: '' }));\r\n          } else {\r\n            enqueueSnackbar(res?.data?.message, {\r\n              variant: 'success',\r\n            });\r\n            setState((prev) => ({ ...prev, openModal: false, id: '' }));\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <Page title=\"Crop Challanges List\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Farmer Challanges List\"\r\n          links={[{ href: PATH_DASHBOARD.masterdata.create }]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\r\n              onClick={handleAddCrop}\r\n            >\r\n              Add Challanges\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card>\r\n          <UserTableToolbar\r\n            filterName={state.filterChallenge}\r\n            filterVillage={state.filterStatus}\r\n            onFilterName={handleFilterChallenge}\r\n            onSearch={onSearch}\r\n            placeholderText={'Search by crop challanges name'}\r\n            placeholderTextSecond={'Search by status'}\r\n            challenges={true}\r\n            state={state}\r\n            onChange={onChange}\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800, position: 'relative' }}>\r\n              <Table size={'medium'}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={challengesListData?.length}\r\n                  numSelected={selected.length}\r\n                />\r\n\r\n                <TableBody>\r\n                  {challengesListData?.length\r\n                    ? challengesListData\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row: ChallangesItem) => (\r\n                          <ChallangesTableRow\r\n                            key={row.id}\r\n                            row={row}\r\n                            onEditRow={onEditRow}\r\n                            onDeleteRow={onDeleteRow}\r\n                          />\r\n                        ))\r\n                    : null}\r\n\r\n                  <TableNoData isNotFound={isNotFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <Box sx={{ position: 'relative' }}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={challengesListData?.length ? challengesListData.length : 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={onChangePage}\r\n              onRowsPerPageChange={onChangeRowsPerPage}\r\n            />\r\n          </Box>\r\n        </Card>\r\n      </Container>\r\n\r\n      <MasterDataForm\r\n        openModal={state.openModal}\r\n        handleClose={handleClose}\r\n        onSubmit={onSubmit}\r\n        methods={methods}\r\n        id={state.id}\r\n        handleCropDetails={handleCropDetails}\r\n        title={state.id ? 'Edit Farmer Challenges Details' : 'Add New Farmer Challenges'}\r\n        cropDetails={challengesDetails}\r\n        disabled={\r\n          challengesDetails?.challenge === watch('challenge') &&\r\n          challengesDetails?.status === watch('status')\r\n        }\r\n      >\r\n        <ChallengesForm statusList={statusChallangesList} methods={methods} />\r\n      </MasterDataForm>\r\n\r\n      <ConfirmationModal\r\n        openModal={state.openDeleteModal}\r\n        // isLoading={isLoading}\r\n        handleClose={handleDeleteClose}\r\n        title={'Delete Confirmation!'}\r\n        handleSubmit={handleDeleteCropsChallanges}\r\n      >\r\n        <DeleteConfirmationContent userName={state?.cropsChallangesName} />\r\n      </ConfirmationModal>\r\n    </Page>\r\n  );\r\n}\r\n","import { Box, Typography, Button } from '@mui/material';\r\nimport Iconify from 'src/components/Iconify';\r\n\r\ninterface DeleteConfirmationProps {\r\n  userName: string;\r\n}\r\n\r\nexport const DeleteConfirmationContent = ({\r\n  userName,\r\n}: DeleteConfirmationProps) => (\r\n  <Box\r\n    sx={{\r\n      p: 2,\r\n      minHeight: '180px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      textAlign: 'center',\r\n    }}\r\n  >\r\n    {/* Icon Box */}\r\n    <Box\r\n      sx={{\r\n        width: 80,\r\n        height: 80,\r\n        borderRadius: '50%',\r\n        backgroundColor: '#FDECF2', \r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      <Iconify  \r\n        icon=\"mingcute:delete-2-line\"\r\n        sx={{ fontSize: 32, color: '#E91E63' }} \r\n      />\r\n    </Box>\r\n\r\n    {/* Confirmation Text */}\r\n    <Typography\r\n      variant=\"h6\"\r\n      sx={{\r\n        fontWeight: 'bold',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      Are you sure you want to remove {userName}?\r\n    </Typography>\r\n\r\n  </Box>\r\n);\r\n","import { useState } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { TableRow, TableCell, Typography, MenuItem } from '@mui/material';\r\n// @types\r\nimport { UserItem } from '../../../../@types/user';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { TableMoreMenu } from '../../../../components/table';\r\nimport { languageList } from 'src/mockUp/Sevak';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  row: UserItem | null;\r\n  selected: boolean;\r\n  onSelectRow: VoidFunction;\r\n  onDeleteRow?: VoidFunction;\r\n  onhandleEditDetails?: (id: any) => void;\r\n  onhandleDeleteRow?: (id: any, name: any) => void;\r\n  handleShowDetails?: (id: any) => void;\r\n};\r\n\r\nexport default function SevakTableRow({\r\n  row,\r\n  onhandleEditDetails,\r\n  onhandleDeleteRow,\r\n  handleShowDetails,\r\n}: Props) {\r\n  const theme = useTheme();\r\n\r\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\r\n  const { name, village, phone, status, id, language } = row || {};\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setOpenMenuActions(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpenMenuActions(null);\r\n  };\r\n\r\n  const handleStatusColor = (status?: string) => {\r\n    if (status === 'active') {\r\n      return theme.palette.success.darker;\r\n    } else if (status === 'inactive') {\r\n      return theme.palette.error.main;\r\n    } else {\r\n      return theme.palette.warning.main;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow hover sx={{ cursor: 'pointer' }}>\r\n      <TableCell\r\n        sx={{ display: 'flex', alignItems: 'center' }}\r\n        onClick={() => handleShowDetails && handleShowDetails(id)}\r\n      >\r\n        <Typography variant=\"subtitle2\" noWrap sx={{ textTransform:\"capitalize\" }}>\r\n          {name || '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell sx={{ cursor: 'default' }}>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {phone || '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell sx={{ cursor: 'default' }}>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {language ? languageList.find((item) => item?.id === language)?.label || '--' : '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell sx={{ cursor: 'default' }}>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {village?.name || '--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell sx={{ cursor: 'default' }}>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          noWrap\r\n          color={handleStatusColor(status)}\r\n          sx={{ letterSpacing: '1px', textTransform: 'capitalize' }}\r\n        >\r\n          {status}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"left\">\r\n        <TableMoreMenu\r\n          open={openMenu}\r\n          onOpen={handleOpenMenu}\r\n          onClose={handleCloseMenu}\r\n          actions={\r\n            <>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleEditDetails && onhandleEditDetails(id);\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                <Iconify icon={'eva:edit-fill'} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleDeleteRow && onhandleDeleteRow(id, name);\r\n                  handleCloseMenu();\r\n                }}\r\n                sx={{ color: 'error.main' }}\r\n              >\r\n                <Iconify icon={'eva:trash-2-outline'} />\r\n                Delete\r\n              </MenuItem>\r\n            </>\r\n          }\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { Stack, TextField, MenuItem, Button, Select } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { InputLabel } from '@mui/material';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport {\r\n  statusChallangesList,\r\n  statusList,\r\n} from 'src/pages/masterData/cropsChallanges/ChallangesList';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  filterName: string;\r\n  filterVillage: string;\r\n  onFilterName: (value: string) => void;\r\n  onFilterVillage?: any;\r\n  onSearch: VoidFunction;\r\n  placeholderText: string;\r\n  placeholderTextSecond: string;\r\n  challenges?: boolean;\r\n  pits?: boolean;\r\n  stagesName?: any;\r\n  onChange?: any;\r\n  state?: any;\r\n  onChallengesChange?: any;\r\n  challangesStatusList?: boolean;\r\n  stateList?: boolean;\r\n};\r\n\r\nexport default function UserTableToolbar({\r\n  filterName,\r\n  filterVillage,\r\n  onFilterName,\r\n  onFilterVillage,\r\n  onSearch,\r\n  placeholderText,\r\n  placeholderTextSecond,\r\n  pits,\r\n  stagesName,\r\n  onChange,\r\n  state,\r\n  challenges,\r\n  challangesStatusList,\r\n  stateList,\r\n}: Props) {\r\n  return (\r\n    <Stack spacing={2} direction={{ xs: 'column', sm: 'row' }} sx={{ py: 2.5, px: 1 }}>\r\n      <TextField\r\n        fullWidth\r\n        value={filterName}\r\n        onChange={(event) => onFilterName(event.target.value)}\r\n        placeholder={placeholderText}\r\n      />\r\n      {!challenges && (\r\n        <TextField\r\n          fullWidth\r\n          value={filterVillage}\r\n          onChange={(event) => onFilterVillage(event.target.value)}\r\n          placeholder={placeholderTextSecond}\r\n        />\r\n      )}\r\n\r\n      {pits && (\r\n        <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label\">Please select stages</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label=\"please select stages\"\r\n              value={state.selectStages || ''}\r\n              placeholder=\"please select stages\"\r\n              fullWidth\r\n              onChange={(event: any) => onChange(event.target.value)}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Please select stages\r\n              </MenuItem>\r\n              {stagesName?.map((stage: any) => (\r\n                <MenuItem key={stage.id} value={stage.value}>\r\n                  {stage.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </>\r\n      )}\r\n\r\n      {challenges && (\r\n        <>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"demo-simple-select-label\">Please select status</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label=\"please select status\"\r\n              value={state.filterStatus || ''}\r\n              placeholder=\"please select status\"\r\n              fullWidth\r\n              onChange={(event: any) => onChange(event.target.value)}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Please select status\r\n              </MenuItem>\r\n              {statusChallangesList?.map((stage: any) => (\r\n                <MenuItem key={stage.id} value={stage.value}>\r\n                  {stage.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </>\r\n      )}\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        fullWidth\r\n        startIcon={<Iconify icon={'mdi:search'} />}\r\n        onClick={onSearch}\r\n        // sx={{ width: '20%' }}\r\n      >\r\n        Search\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","borderRadius","openModal","handleClose","handleSubmit","children","title","disabled","isLoading","theme","useTheme","open","onClose","disableEnforceFocus","disableAutoFocus","sx","outline","maxWidth","xl","height","display","justifyContent","alignItems","p","palette","primary","lighter","variant","color","grey","letterSpacing","onClick","minWidth","padding","common","white","icon","black","mt","direction","spacing","fullWidth","methods","onSubmit","id","handleCropDetails","cropDetails","dispatch","useDispatch","useEffect","startLoading","formState","isSubmitting","type","startIcon","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","orderBy","setOrderBy","defaultOrder","order","setOrder","defaultCurrentPage","page","setPage","defaultRowsPerPage","rowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onSort","onChangePage","event","newPage","onChangeDense","target","onChangeRowsPerPage","parseInt","value","useTabs","defaultValues","currentTab","setCurrentTab","onChangeTab","newValue","sevekTableHeader","label","align","languageList","name","ChallangesTableRow","row","onEditRow","handleShowDetails","onDeleteRow","openMenu","setOpenMenuActions","handleCloseMenu","status","challenge","TableRow","hover","TableCell","Typography","noWrap","textTransform","onOpen","currentTarget","actions","MenuItem","Iconify","statusList","watch","columnGap","rowGap","gridTemplateColumns","xs","sm","placeholder","options","statusChallangesList","TABLE_HEAD","ChallangesList","enqueueSnackbar","useSnackbar","filterChallenge","filterStatus","openDeleteModal","cropsChallangesName","state","setState","handleCropListing","getCropsChallengesList","useSelector","challenges","challengesListData","challengesDetails","useMemo","NewCropsSchema","Yup","shape","required","max","useForm","resolver","yupResolver","setValue","isNotFound","prev","emptyCropsChallengesDetails","data","previousState","payload","Object","keys","forEach","key","addEditCropsChallenges","then","res","statusCode","message","error","console","Page","Container","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","action","Button","Card","filterName","filterVillage","onFilterName","onSearch","placeholderText","placeholderTextSecond","onChange","Scrollbar","TableContainer","Table","size","headLabel","rowCount","numSelected","TableBody","map","Box","TablePagination","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","MasterDataForm","getCropsChallangesDetails","Confirmation","deleteCropsChallanges","catch","log","DeleteConfirmationContent","userName","minHeight","flexDirection","textAlign","backgroundColor","mb","fontSize","fontWeight","SevakTableRow","onhandleEditDetails","onhandleDeleteRow","village","phone","language","cursor","item","success","darker","main","warning","handleStatusColor","UserTableToolbar","onFilterVillage","pits","stagesName","challangesStatusList","stateList","Stack","py","px","TextField","FormControl","InputLabel","Select","labelId","selectStages","stage","createBox"],"sourceRoot":""}