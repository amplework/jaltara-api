{"version":3,"file":"static/js/2382.c67585f5.chunk.js","mappings":"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","sources":["components/InputStyle.tsx","components/SocialsButton.tsx","pages/ComingSoon.tsx","hooks/useCountdown.ts"],"sourcesContent":["// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { OutlinedInputProps, TextField } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface Props extends OutlinedInputProps {\r\n  stretchStart?: number;\r\n}\r\n\r\nconst InputStyle = styled(TextField, {\r\n  shouldForwardProp: (prop) => prop !== 'stretchStart',\r\n})<Props>(({ stretchStart, theme }) => ({\r\n  '& .MuiOutlinedInput-root': {\r\n    transition: theme.transitions.create(['box-shadow', 'width'], {\r\n      easing: theme.transitions.easing.easeInOut,\r\n      duration: theme.transitions.duration.shorter,\r\n    }),\r\n    '&.Mui-focused': {\r\n      boxShadow: theme.customShadows.z12,\r\n    },\r\n    ...(stretchStart && {\r\n      width: stretchStart,\r\n      '&.Mui-focused': {\r\n        boxShadow: theme.customShadows.z12,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: stretchStart + 60,\r\n        },\r\n      },\r\n    }),\r\n  },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`,\r\n  },\r\n}));\r\n\r\nexport default InputStyle;\r\n","// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Button,\r\n  Tooltip,\r\n  IconButton,\r\n  ButtonProps,\r\n  IconButtonProps,\r\n} from '@mui/material';\r\n//\r\nimport Iconify from './Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type SocialLinks = {\r\n  facebook?: string;\r\n  instagram?: string;\r\n  linkedin?: string;\r\n  twitter?: string;\r\n};\r\n\r\ntype IProps = IconButtonProps & ButtonProps;\r\n\r\ninterface Props extends IProps {\r\n  simple?: boolean;\r\n  initialColor?: boolean;\r\n  links?: SocialLinks;\r\n}\r\n\r\nexport default function SocialsButton({\r\n  initialColor = false,\r\n  simple = true,\r\n  links = {},\r\n  sx,\r\n  ...other\r\n}: Props) {\r\n  const SOCIALS = [\r\n    {\r\n      name: 'FaceBook',\r\n      icon: 'eva:facebook-fill',\r\n      socialColor: '#1877F2',\r\n      path: links.facebook || '#facebook-link',\r\n    },\r\n    {\r\n      name: 'Instagram',\r\n      icon: 'ant-design:instagram-filled',\r\n      socialColor: '#E02D69',\r\n      path: links.instagram || '#instagram-link',\r\n    },\r\n    {\r\n      name: 'Linkedin',\r\n      icon: 'eva:linkedin-fill',\r\n      socialColor: '#007EBB',\r\n      path: links.linkedin || '#linkedin-link',\r\n    },\r\n    {\r\n      name: 'Twitter',\r\n      icon: 'eva:twitter-fill',\r\n      socialColor: '#00AAEC',\r\n      path: links.twitter || '#twitter-link',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n      {SOCIALS.map((social) => {\r\n        const { name, icon, path, socialColor } = social;\r\n        return simple ? (\r\n          <Link key={name} href={path}>\r\n            <Tooltip title={name} placement=\"top\">\r\n              <IconButton\r\n                color=\"inherit\"\r\n                sx={{\r\n                  ...(initialColor && {\r\n                    color: socialColor,\r\n                    '&:hover': {\r\n                      bgcolor: alpha(socialColor, 0.08),\r\n                    },\r\n                  }),\r\n                  ...sx,\r\n                }}\r\n                {...other}\r\n              >\r\n                <Iconify icon={icon} sx={{ width: 20, height: 20 }} />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Link>\r\n        ) : (\r\n          <Button\r\n            key={name}\r\n            href={path}\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            startIcon={<Iconify icon={icon} />}\r\n            sx={{\r\n              m: 0.5,\r\n              flexShrink: 0,\r\n              ...(initialColor && {\r\n                color: socialColor,\r\n                borderColor: socialColor,\r\n                '&:hover': {\r\n                  borderColor: socialColor,\r\n                  bgcolor: alpha(socialColor, 0.08),\r\n                },\r\n              }),\r\n              ...sx,\r\n            }}\r\n            {...other}\r\n          >\r\n            {name}\r\n          </Button>\r\n        );\r\n      })}\r\n    </Stack>\r\n  );\r\n}\r\n","// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, Stack, Container, Typography, InputAdornment } from '@mui/material';\r\n// hooks\r\nimport useCountdown from '../hooks/useCountdown';\r\n// components\r\nimport Page from '../components/Page';\r\nimport InputStyle from '../components/InputStyle';\r\nimport SocialsButton from '../components/SocialsButton';\r\n// assets\r\nimport { ComingSoonIllustration } from '../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  minHeight: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  flexDirection: 'column',\r\n  padding: theme.spacing(12, 0),\r\n}));\r\n\r\nconst CountdownStyle = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n});\r\n\r\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1),\r\n  [theme.breakpoints.up('sm')]: {\r\n    margin: theme.spacing(0, 2.5),\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComingSoon() {\r\n  const countdown = useCountdown(new Date('07/07/2024 21:30'));\r\n\r\n  return (\r\n    <Page title=\"Coming Soon\">\r\n      <Container>\r\n        <ContentStyle sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" paragraph>\r\n            Coming Soon!\r\n          </Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}>\r\n            We are currently working hard on this page!\r\n          </Typography>\r\n\r\n          <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\r\n\r\n          <CountdownStyle>\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.days}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Days</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.hours}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Hours</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.minutes}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Minutes</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.seconds}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Seconds</Typography>\r\n            </div>\r\n          </CountdownStyle>\r\n\r\n          <InputStyle\r\n            fullWidth\r\n            placeholder=\"Enter your email\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <Button variant=\"contained\" size=\"large\">\r\n                    Notify Me\r\n                  </Button>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            sx={{ my: 5, '& .MuiOutlinedInput-root': { pr: 0.5 } }}\r\n          />\r\n\r\n          <Stack alignItems=\"center\">\r\n            <SocialsButton size=\"large\" initialColor />\r\n          </Stack>\r\n        </ContentStyle>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useCountdown(date: Date) {\r\n  const [countdown, setCountdown] = useState({\r\n    days: '00',\r\n    hours: '00',\r\n    minutes: '00',\r\n    seconds: '00'\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setNewTime(), 1000);\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setNewTime = () => {\r\n    const startTime = date;\r\n    const endTime = new Date();\r\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\r\n\r\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\r\n\r\n    const getHours = `0${Math.floor(\r\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    )}`.slice(-2);\r\n\r\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\r\n\r\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\r\n\r\n    setCountdown({\r\n      days: getDays.toString() || '000',\r\n      hours: getHours || '000',\r\n      minutes: getMinutes || '000',\r\n      seconds: getSeconds || '000'\r\n    });\r\n  };\r\n\r\n  return countdown;\r\n}\r\n\r\n// Usage\r\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\r\n"],"names":["styled","TextField","shouldForwardProp","prop","stretchStart","theme","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z12","width","breakpoints","up","borderWidth","borderColor","palette","grey","SocialsButton","initialColor","simple","links","sx","other","SOCIALS","name","icon","socialColor","path","facebook","instagram","linkedin","twitter","Stack","direction","flexWrap","alignItems","map","social","Link","href","Tooltip","title","placement","IconButton","color","bgcolor","alpha","Iconify","height","Button","variant","size","startIcon","m","flexShrink","ContentStyle","maxWidth","margin","minHeight","display","justifyContent","flexDirection","padding","spacing","CountdownStyle","SeparatorStyle","Typography","ComingSoon","countdown","date","useState","days","hours","minutes","seconds","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","valueOf","getDays","Math","floor","getHours","slice","getMinutes","getSeconds","toString","useCountdown","Page","Container","textAlign","paragraph","my","fullWidth","placeholder","InputProps","endAdornment","InputAdornment","position","pr"],"sourceRoot":""}