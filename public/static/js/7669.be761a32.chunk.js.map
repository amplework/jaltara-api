{"version":3,"file":"static/js/7669.be761a32.chunk.js","mappings":"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","sources":["components/modal/Confirmation.tsx","components/modal/MasterDataForm.tsx","hooks/useTable.ts","hooks/useTabs.ts","sections/@dashboard/user/list/VillageTableRow.tsx","pages/location/state/StateForm.tsx","pages/location/state/StateList.tsx","pages/sevak/DeleteConfirmationContent.tsx","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\r\nimport { Box, Container, Divider, Modal, Stack, Typography, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport Iconify from '../Iconify';\r\nimport { SkeletonPost } from '../skeleton';\r\n\r\ninterface ConfirmationModalProps {\r\n  openModal: boolean;\r\n  handleClose?: VoidFunction;\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n  title: string;\r\n  handleSubmit: () => void;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 550,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '10px',\r\n};\r\n\r\nconst ConfirmationModal = ({\r\n  openModal,\r\n  handleClose,\r\n  handleSubmit,\r\n  children,\r\n  title = 'Add New Crop',\r\n  disabled,\r\n  isLoading,\r\n}: ConfirmationModalProps) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      disableEnforceFocus={false}\r\n      disableAutoFocus={false}\r\n      sx={{ outline: 0 }}\r\n    >\r\n      <Container\r\n        sx={{\r\n          maxWidth: {\r\n            xl: '2600px',\r\n            position: 'relative',\r\n            borderRadius: '20px',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={style}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            borderRadius={'10px 10px 0 0'}\r\n            p={2}\r\n            bgcolor={theme.palette.primary.lighter}\r\n          >\r\n            <Typography variant=\"h6\" color={theme.palette.grey[0]} sx={{ letterSpacing: '0.7px' }}>\r\n              {title}\r\n            </Typography>\r\n            <LoadingButton\r\n              onClick={handleClose}\r\n              sx={{\r\n                minWidth: 0,\r\n                padding: 0.2,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                borderRadius: '50%',\r\n                bgcolor: theme.palette.common.white,\r\n                ':hover': {\r\n                  bgcolor: theme.palette.common.white,\r\n                },\r\n              }}\r\n            >\r\n              <Iconify\r\n                icon=\"iconamoon:close-bold\"\r\n                width={24}\r\n                height={24}\r\n                color={theme.palette.common.black}\r\n              />\r\n            </LoadingButton>\r\n          </Box>\r\n\r\n          <Divider />\r\n          {/* Content */}\r\n          {isLoading ? (\r\n            <SkeletonPost />\r\n          ) : (\r\n            <Box\r\n              mt={2}\r\n              //  sx={{ minHeight: 300 }}\r\n            >\r\n              {children}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Footer */}\r\n          <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" p={2}>\r\n            <LoadingButton variant=\"outlined\" onClick={handleClose} fullWidth sx={{ p: 1 }}>\r\n              Cancel\r\n            </LoadingButton>\r\n            <LoadingButton\r\n              variant=\"contained\"\r\n              disabled={disabled}\r\n              onClick={handleSubmit}\r\n              fullWidth\r\n              sx={{ p: 1 }}\r\n            >\r\n              {'Delete'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Box>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { LoadingButton } from '@mui/lab';\r\nimport { Box, Container, Divider, Modal, Stack, Typography, useTheme } from '@mui/material';\r\nimport React, { useEffect } from 'react';\r\nimport Iconify from '../Iconify';\r\nimport { FormProvider } from '../hook-form';\r\nimport { CropItem } from 'src/@types/crops';\r\nimport { ChallangesItem } from 'src/@types/challanges';\r\nimport { startLoading } from 'src/redux/slices/crops';\r\nimport { useDispatch } from 'src/redux/store';\r\nimport { SkeletonPost, SkeletonProduct } from '../skeleton';\r\n\r\ninterface MasterDataFormProps {\r\n  openModal: boolean;\r\n  handleClose?: VoidFunction;\r\n  children?: React.ReactNode;\r\n  title?: string;\r\n  methods: any;\r\n  onSubmit: any;\r\n  id?: string;\r\n  handleCropDetails?: any;\r\n  cropDetails?: CropItem | ChallangesItem;\r\n  disabled?: boolean;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 550,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '10px',\r\n};\r\n\r\nconst MasterDataForm = ({\r\n  openModal,\r\n  handleClose,\r\n  children,\r\n  methods,\r\n  onSubmit,\r\n  id,\r\n  cropDetails,\r\n  handleCropDetails,\r\n  title = 'Add New Crop',\r\n  disabled,\r\n  isLoading,\r\n}: MasterDataFormProps) => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(startLoading());\r\n      handleCropDetails();\r\n    }\r\n  }, [id]);\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"modal-title\"\r\n      aria-describedby=\"modal-description\"\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      disableEnforceFocus={false}\r\n      disableAutoFocus={false}\r\n      sx={{ outline: 0 }}\r\n    >\r\n      <Container\r\n        sx={{\r\n          maxWidth: {\r\n            xl: '2600px',\r\n            position: 'relative',\r\n            borderRadius: '20px',\r\n            height: '100%',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={style}>\r\n          <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Header */}\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              borderRadius={'10px 10px 0 0'}\r\n              p={2}\r\n              bgcolor={theme.palette.primary.lighter}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                color={theme.palette.grey[0]}\r\n                sx={{ letterSpacing: '0.7px' }}\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <LoadingButton\r\n                onClick={handleClose}\r\n                sx={{\r\n                  minWidth: 0,\r\n                  padding: 0.2,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  borderRadius: '50%',\r\n                  bgcolor: theme.palette.common.white,\r\n                  ':hover': {\r\n                    bgcolor: theme.palette.common.white,\r\n                  },\r\n                }}\r\n              >\r\n                <Iconify\r\n                  icon=\"iconamoon:close-bold\"\r\n                  width={24}\r\n                  height={24}\r\n                  color={theme.palette.common.black}\r\n                />\r\n              </LoadingButton>\r\n            </Box>\r\n\r\n            <Divider />\r\n            {/* Content */}\r\n            {isLoading ? (\r\n              <SkeletonPost />\r\n            ) : (\r\n              <Box\r\n                mt={2}\r\n                //  sx={{ minHeight: 300 }}\r\n              >\r\n                {children}\r\n              </Box>\r\n            )}\r\n\r\n            {/* Footer */}\r\n            <Divider />\r\n            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\" p={2}>\r\n              <LoadingButton variant=\"outlined\" onClick={handleClose}>\r\n                Cancel\r\n              </LoadingButton>\r\n              <LoadingButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={disabled}\r\n                startIcon={<Iconify icon={!id ? 'mingcute:user-add-fill' : 'fa-solid:user-edit'} />}\r\n              >\r\n                {id ? 'Save' : 'Add'}\r\n              </LoadingButton>\r\n            </Stack>\r\n          </FormProvider>\r\n        </Box>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MasterDataForm;\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type UseTableProps = {\r\n  dense: boolean;\r\n  page: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n  rowsPerPage: number;\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  //\r\n  selected: string[];\r\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\r\n  onSelectRow: (id: string) => void;\r\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void;\r\n  //\r\n  onSort: (id: string) => void;\r\n  onChangePage: (event: unknown, newPage: number) => void;\r\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nexport type Props = {\r\n  defaultDense?: boolean;\r\n  defaultOrder?: 'asc' | 'desc';\r\n  defaultOrderBy?: string;\r\n  defaultSelected?: string[];\r\n  defaultRowsPerPage?: number;\r\n  defaultCurrentPage?: number;\r\n};\r\n\r\nexport default function useTable(props?: Props) {\r\n  const [dense, setDense] = useState(props?.defaultDense || false);\r\n\r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [selected, setSelected] = useState<string[]>(props?.defaultSelected || []);\r\n\r\n  const onSort = (id: string) => {\r\n    const isAsc = orderBy === id && order === 'asc';\r\n    if (id !== '') {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(id);\r\n    }\r\n  };\r\n\r\n  const onSelectRow = (id: string) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const onSelectAllRows = (checked: boolean, newSelecteds: string[]) => {\r\n    if (checked) {\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const onChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    setPage,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    setSelected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onChangeRowsPerPage,\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (typeof orderBy === \"string\") {\r\n    const aValue = orderBy.split(\".\").reduce((o: any, i) => o[i], a);\r\n    const bValue = orderBy.split(\".\").reduce((o: any, i) => o[i], b);\r\n\r\n    if (bValue < aValue) {\r\n      return -1;\r\n    }\r\n    if (bValue > aValue) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  } else {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport function getComparator<Key extends keyof any>(\r\n  order: 'asc' | 'desc',\r\n  orderBy: Key\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\r\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTabs(defaultValues?: string) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event: React.SyntheticEvent<Element, Event>, newValue: string) => {\r\n      setCurrentTab(newValue);\r\n    },\r\n    setCurrentTab,\r\n  };\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { TableRow, TableCell, Typography, MenuItem } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { TableMoreMenu } from '../../../../components/table';\r\nimport { LocationListing, VillageEntity } from 'src/@types/location';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  // row: VillageEntity | null;\r\n  row: LocationListing | null;\r\n  handleShowDetails?: (id: any) => void;\r\n  onhandleDeleteRow?: (id: any, name: any) => void;\r\n  onhandleEditDetails?: (id: any) => void;\r\n};\r\n\r\nexport default function VillageTableRow({\r\n  row,\r\n  handleShowDetails,\r\n  onhandleDeleteRow,\r\n  onhandleEditDetails,\r\n}: Props) {\r\n  const theme = useTheme();\r\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setOpenMenuActions(event.currentTarget);\r\n  };\r\n  const handleCloseMenu = () => {\r\n    setOpenMenuActions(null);\r\n  };\r\n\r\n  const { id, name,code } = row || {};\r\n\r\n  return (\r\n    <TableRow hover sx={{ textTransform:\"capitalize\" }}>\r\n      <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Typography variant=\"subtitle2\" noWrap >\r\n          {name}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {code?code:'--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {'--'}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell align=\"left\">\r\n        <TableMoreMenu\r\n          open={openMenu}\r\n          onOpen={handleOpenMenu}\r\n          onClose={handleCloseMenu}\r\n          actions={\r\n            <>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleEditDetails && onhandleEditDetails(id);\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                <Iconify icon={'eva:edit-fill'} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleDeleteRow && onhandleDeleteRow(id, name);\r\n                  handleCloseMenu();\r\n                }}\r\n                sx={{ color: 'error.main' }}\r\n              >\r\n                <Iconify icon={'eva:trash-2-outline'} />\r\n                Delete\r\n              </MenuItem>\r\n            </>\r\n          }\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { RHFSelectDropdown, RHFTextField } from 'src/components/hook-form';\r\nimport { useSelector } from 'src/redux/store';\r\n\r\nexport const LocationList = [\r\n  { id: 'state', label: 'State', name: 'State', value: 'state' },\r\n  { id: 'district', label: 'District', name: 'District', value: 'district' },\r\n  { id: 'taluk', label: 'Taluk', name: 'Taluk', value: 'taluk' },\r\n  { id: 'village', label: 'Village', name: 'Village', value: 'village' },\r\n];\r\n\r\ninterface LocationFormProp {\r\n  statusList?: any;\r\n  handleLocationChange?: any;\r\n  handleStatesSelect?: any;\r\n  handleDistrictSelect?: any;\r\n  handleTalukSelect?: any;\r\n  methods?: any;\r\n  state?: any;\r\n  isLoading?: boolean;\r\n  selectLocation?: any;\r\n}\r\nconst StateForm = ({\r\n  handleLocationChange,\r\n  methods,\r\n  state,\r\n  selectLocation,\r\n}: LocationFormProp) => {\r\n  const { watch } = methods;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'grid',\r\n        columnGap: 2,\r\n        rowGap: 2,\r\n        gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(1, 1fr)' },\r\n        p: 2,\r\n      }}\r\n    >\r\n      <RHFSelectDropdown\r\n        name=\"location\"\r\n        label={'Select location'}\r\n        placeholder={'location'}\r\n        value={watch('location')}\r\n        options={selectLocation?.length ? selectLocation : LocationList}\r\n        onChange={handleLocationChange}\r\n        disabled={true}\r\n      />\r\n\r\n      <RHFTextField name=\"name\" label={'Name'} placeholder={'Name'} />\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StateForm;\r\n","import * as Yup from 'yup';\r\nimport { useEffect, useMemo, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  Container,\r\n  TableContainer,\r\n  TablePagination,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport useTable from 'src/hooks/useTable';\r\nimport useTabs from 'src/hooks/useTabs';\r\nimport Page from 'src/components/Page';\r\nimport HeaderBreadcrumbs from 'src/components/HeaderBreadcrumbs';\r\nimport { PATH_DASHBOARD } from 'src/routes/paths';\r\nimport Scrollbar from 'src/components/Scrollbar';\r\nimport { TableHeadCustom, TableNoData, TableSkeleton } from 'src/components/table';\r\nimport {\r\n  addLocationsDetails,\r\n  deleteVillage,\r\n  editLocationsDetails,\r\n  getLocationDetails,\r\n  getVillageListing,\r\n  getVillageLocationList,\r\n  setEmptyLocationData,\r\n} from 'src/redux/slices/locations';\r\nimport { LocationAdd, LocationListing } from 'src/@types/location';\r\nimport MasterDataForm from 'src/components/modal/MasterDataForm';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { emptyDistrictList, emptyStatesDetails, getStatesList } from 'src/redux/slices/user';\r\nimport { useSnackbar } from 'notistack';\r\nimport Iconify from 'src/components/Iconify';\r\nimport ConfirmationModal from 'src/components/modal/Confirmation';\r\nimport { DeleteConfirmationContent } from '../../sevak/DeleteConfirmationContent';\r\nimport VillageTableRow from 'src/sections/@dashboard/user/list/VillageTableRow';\r\nimport StateForm from './StateForm';\r\nimport { UserTableToolbar } from 'src/sections/@dashboard/user/list';\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'state', label: 'State Name', align: 'left' },\r\n  { id: 'code', label: 'Code', align: 'left' },\r\n  // { id: 'district', label: 'District', align: 'left' },\r\n  // { id: 'state', label: 'State', align: 'left' },\r\n  { id: 'nofarmer', label: 'Farmer Count', align: 'left' },\r\n  { id: 'action', label: 'Action', align: 'left' },\r\n];\r\n\r\nexport const StateLocationList = [{ id: 'state', label: 'State', name: 'State', value: 'state' }];\r\n\r\nexport default function StateList() {\r\n  const {\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    selected,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n    setPage,\r\n  } = useTable();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    id: '',\r\n    selectStages: '',\r\n    openModal: false,\r\n    villageId: null,\r\n    parentId: '',\r\n    stateId: '',\r\n    districtId: '',\r\n    talukId: '',\r\n    isLoading: false,\r\n    openDeleteModal: false,\r\n    VillageName: '',\r\n    filterName: '',\r\n    filterVillage: '',\r\n  });\r\n  // console.log('state', state);\r\n\r\n  const { currentTab: filterStatus } = useTabs('all');\r\n\r\n  useEffect(() => {\r\n    handleLocationList();\r\n    // handleSetLocation()\r\n  }, []);\r\n\r\n  const handleLocationList = () => {\r\n    getVillageLocationList('', '', 'state');\r\n    // getVillageListing()\r\n  };\r\n\r\n  const handleLocationDetails = () => {\r\n    setState((prev: any) => ({ ...prev, isLoading: true }));\r\n    getLocationDetails(state?.id);\r\n  };\r\n\r\n  const { locationData, villageList, isLoading } = useSelector((state) => state.locations);\r\n\r\n  useEffect(() => {\r\n    dispatch(emptyDistrictList(null));\r\n    if (locationData?.id && state?.id) {\r\n      setState((prev: any) => ({ ...prev, isLoading: true, parentId: locationData?.id }));\r\n      setValue('location', locationData?.checkUpperGeo?.entityType);\r\n      setValue('name', locationData?.checkUpperGeo?.name);\r\n      setState((prev: any) => ({ ...prev, isLoading: false, parentId: locationData?.id }));\r\n    }\r\n  }, [locationData?.id, state?.id]);\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      location: '',\r\n      name: '',\r\n    }),\r\n    []\r\n  );\r\n\r\n  const NewLocationSchema = Yup.object().shape({\r\n    location: Yup.string().required('Location is required'),\r\n    name: Yup.string()\r\n      .required('Name is required')\r\n      .matches(/^[^\\s].*$/, 'First Characters space not allowed.')\r\n      .max(50, 'Limit of 50 characters'),\r\n  });\r\n\r\n  const methods = useForm<LocationAdd>({\r\n    resolver: yupResolver(NewLocationSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const { clearErrors, setValue, watch } = methods;\r\n\r\n  const fieldsToClear = ['location', 'name', 'selectDistrict', 'selectStates', 'selectTaluk'];\r\n\r\n  const isNotFound =\r\n    (!villageList?.length && !!state.filterName) ||\r\n    (!villageList?.length && !!state.filterVillage) ||\r\n    (!villageList?.length && !!state.filterName) ||\r\n    (!villageList?.length && !!filterStatus);\r\n\r\n  const handleLocationChange = () => {\r\n    getStatesList();\r\n    setValue('name', '');\r\n  };\r\n\r\n  const onhandleEditDetails = (id: string) => {\r\n    // dispatch(emptyDistrictList(null));\r\n    setState((prev) => ({ ...prev, openModal: true, id: id, isLoading: true }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    dispatch(emptyDistrictList(null));\r\n    setState((prev) => ({ ...prev, openModal: false, id: '', isLoading: false }));\r\n    fieldsToClear.forEach((field: any) => clearErrors(field));\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    setState((prev) => ({ ...prev, openModal: true, id: '' }));\r\n    setValue('location', 'state');\r\n    handleLocationChange();\r\n  };\r\n\r\n  const onSubmit = async (data?: LocationAdd) => {\r\n    const payload = {\r\n      name: data?.name,\r\n      entityType: data?.location,\r\n    };\r\n\r\n    if (state?.id) {\r\n      dispatch(editLocationsDetails(payload, state?.id)).then((res: any) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n          handleLocationList();\r\n          handleClose();\r\n          // dispatch(emptyDistrictList(null));\r\n          dispatch(emptyStatesDetails(null));\r\n          dispatch(setEmptyLocationData(null));\r\n        } else if (res?.data?.statusCode === 409) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n        } else if (res?.data?.statusCode === 422) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n        } else {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n          handleClose();\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(addLocationsDetails(payload)).then((res: any) => {\r\n        if (res?.data?.statusCode === 201) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          handleLocationList();\r\n          handleClose();\r\n        } else if (res?.data?.statusCode === 409) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n        } else if (res?.data?.statusCode === 422) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'error',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onhandleDeleteRow = (id: string, name: string) => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: true, id: id, VillageName: name }));\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setState((prev) => ({ ...prev, openDeleteModal: false, id: '', VillageName: '' }));\r\n  };\r\n\r\n  const handleDeleteState = () => {\r\n    dispatch(deleteVillage(state?.id))\r\n      .then((res) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          getVillageListing();\r\n          setState((prev) => ({ ...prev, openDeleteModal: false, id: '', VillageName: '' }));\r\n        } else {\r\n          getVillageListing();\r\n          setState((prev) => ({ ...prev, openDeleteModal: false, id: '', VillageName: '' }));\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('error');\r\n      });\r\n  };\r\n\r\n  const handleStateDisabled = () => {\r\n    if (locationData?.checkUpperGeo?.name === watch('name') || !watch('name')?.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // work filter\r\n  const handleFilterName = (Name: string) => {\r\n    setState((prev) => ({ ...prev, filterName: Name }));\r\n  };\r\n\r\n  const onSearch = () => {\r\n    setPage(0);\r\n    getVillageLocationList(state?.filterName, state?.filterVillage, 'state');\r\n  };\r\n  return (\r\n    <Page title=\"State\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"State List\"\r\n          links={[{ href: PATH_DASHBOARD.location.root }]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\r\n              onClick={handleAddUser}\r\n            >\r\n              Add Geolocation\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card sx={{ pt: 2 }}>\r\n          {/* <UserTableToolbar\r\n            filterName={state.filterName}\r\n            filterVillage={state.filterVillage}\r\n            onFilterName={handleFilterName}\r\n            // onFilterVillage={handleFilterRole}\r\n            onSearch={onSearch}\r\n            stateList={false}\r\n            placeholderText={'Search by state name'}\r\n            placeholderTextSecond={'Search by village name'}\r\n          /> */}\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800, position: 'relative' }}>\r\n              <Table size={'medium'} sx={{}}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={villageList?.length}\r\n                  numSelected={selected.length}\r\n                />\r\n\r\n                <TableBody>\r\n                  {isLoading && !villageList?.length ? (\r\n                    <TableSkeleton />\r\n                  ) : villageList?.length ? (\r\n                    villageList\r\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                      .map((row: LocationListing) => (\r\n                        <VillageTableRow\r\n                          key={row.id}\r\n                          row={row}\r\n                          onhandleDeleteRow={onhandleDeleteRow}\r\n                          onhandleEditDetails={onhandleEditDetails}\r\n                        />\r\n                      ))\r\n                  ) : (\r\n                    <TableNoData isNotFound={isNotFound} />\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <Box sx={{ position: 'relative' }}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={villageList?.length ? villageList.length : 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={onChangePage}\r\n              onRowsPerPageChange={onChangeRowsPerPage}\r\n            />\r\n          </Box>\r\n        </Card>\r\n      </Container>\r\n\r\n      <MasterDataForm\r\n        openModal={state.openModal}\r\n        isLoading={state?.isLoading}\r\n        handleClose={handleClose}\r\n        onSubmit={onSubmit}\r\n        methods={methods}\r\n        id={state?.id}\r\n        handleCropDetails={handleLocationDetails}\r\n        title={state.id ? 'Edit State Location' : 'Add State Geo Location'}\r\n        disabled={handleStateDisabled()}\r\n      >\r\n        <StateForm\r\n          selectLocation={StateLocationList}\r\n          state={state}\r\n          methods={methods}\r\n          handleLocationChange={handleLocationChange}\r\n          isLoading={state.isLoading}\r\n        />\r\n      </MasterDataForm>\r\n\r\n      <ConfirmationModal\r\n        openModal={state.openDeleteModal}\r\n        // isLoading={isLoading}\r\n        handleClose={handleDeleteClose}\r\n        title={'Delete Confirmation!'}\r\n        handleSubmit={handleDeleteState}\r\n      >\r\n        <DeleteConfirmationContent userName={state?.VillageName} />\r\n      </ConfirmationModal>\r\n    </Page>\r\n  );\r\n}\r\n","import { Box, Typography, Button } from '@mui/material';\r\nimport Iconify from 'src/components/Iconify';\r\n\r\ninterface DeleteConfirmationProps {\r\n  userName: string;\r\n}\r\n\r\nexport const DeleteConfirmationContent = ({\r\n  userName,\r\n}: DeleteConfirmationProps) => (\r\n  <Box\r\n    sx={{\r\n      p: 2,\r\n      minHeight: '180px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      textAlign: 'center',\r\n    }}\r\n  >\r\n    {/* Icon Box */}\r\n    <Box\r\n      sx={{\r\n        width: 80,\r\n        height: 80,\r\n        borderRadius: '50%',\r\n        backgroundColor: '#FDECF2', \r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      <Iconify  \r\n        icon=\"mingcute:delete-2-line\"\r\n        sx={{ fontSize: 32, color: '#E91E63' }} \r\n      />\r\n    </Box>\r\n\r\n    {/* Confirmation Text */}\r\n    <Typography\r\n      variant=\"h6\"\r\n      sx={{\r\n        fontWeight: 'bold',\r\n        mb: 2,\r\n      }}\r\n    >\r\n      Are you sure you want to remove {userName}?\r\n    </Typography>\r\n\r\n  </Box>\r\n);\r\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","borderRadius","openModal","handleClose","handleSubmit","children","title","disabled","isLoading","theme","useTheme","open","onClose","disableEnforceFocus","disableAutoFocus","sx","outline","maxWidth","xl","height","display","justifyContent","alignItems","p","palette","primary","lighter","variant","color","grey","letterSpacing","onClick","minWidth","padding","common","white","icon","black","mt","direction","spacing","fullWidth","methods","onSubmit","id","handleCropDetails","cropDetails","dispatch","useDispatch","useEffect","startLoading","formState","isSubmitting","type","startIcon","useTable","props","useState","defaultDense","dense","setDense","defaultOrderBy","orderBy","setOrderBy","defaultOrder","order","setOrder","defaultCurrentPage","page","setPage","defaultRowsPerPage","rowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","length","onSelectAllRows","checked","newSelecteds","onSort","onChangePage","event","newPage","onChangeDense","target","onChangeRowsPerPage","parseInt","value","useTabs","defaultValues","currentTab","setCurrentTab","onChangeTab","newValue","VillageTableRow","row","onhandleDeleteRow","handleShowDetails","onhandleEditDetails","openMenu","setOpenMenuActions","handleCloseMenu","name","code","TableRow","hover","textTransform","TableCell","Typography","noWrap","align","onOpen","currentTarget","actions","MenuItem","Iconify","LocationList","label","handleLocationChange","selectLocation","state","watch","columnGap","rowGap","gridTemplateColumns","xs","sm","placeholder","options","onChange","TABLE_HEAD","StateLocationList","StateList","enqueueSnackbar","useSnackbar","selectStages","villageId","parentId","stateId","districtId","talukId","openDeleteModal","VillageName","filterName","filterVillage","setState","filterStatus","handleLocationList","getVillageLocationList","useSelector","locations","locationData","villageList","emptyDistrictList","prev","setValue","checkUpperGeo","entityType","useMemo","location","NewLocationSchema","Yup","shape","required","matches","max","useForm","resolver","yupResolver","clearErrors","fieldsToClear","isNotFound","getStatesList","forEach","field","data","payload","editLocationsDetails","then","res","statusCode","message","emptyStatesDetails","setEmptyLocationData","addLocationsDetails","Page","Container","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","action","Button","Card","pt","Scrollbar","TableContainer","Table","size","headLabel","rowCount","numSelected","TableBody","map","Box","TablePagination","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","MasterDataForm","getLocationDetails","handleStateDisabled","Confirmation","deleteVillage","getVillageListing","catch","console","log","DeleteConfirmationContent","userName","minHeight","flexDirection","textAlign","backgroundColor","mb","fontSize","fontWeight","createBox"],"sourceRoot":""}