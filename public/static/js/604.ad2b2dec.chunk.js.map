{"version":3,"file":"static/js/604.ad2b2dec.chunk.js","mappings":"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","sources":["mockUp/Equipment.ts","sections/@dashboard/user/list/EquipmentTableRow.tsx","pages/equipments/EquipmentList.tsx"],"sourcesContent":["export const equipmentTableHeader = [\r\n    { id: 'name', label: 'Name', align: 'left' },\r\n    { id: 'equipment', label: 'Number Plate', align: 'left' },\r\n    { id: 'status', label: 'Status', align: 'left' },\r\n    { id: 'action', label: 'Action', align: 'left' },\r\n  ];\r\n\r\n  export const equipmentLogs = [\r\n    { id: 'startTime ', label: 'Start Date & Time', align: 'left' },\r\n    { id: 'endTime ', label: 'End Date & Time', align: 'left' },\r\n    { id: 'timeRecord', label: 'Time Record', align: 'left' },\r\n  ];\r\n  ","import { useState } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Checkbox, TableRow, TableCell, Typography, MenuItem } from '@mui/material';\r\n// @types\r\n// components\r\nimport { EquipmentItem } from 'src/@types/equipment';\r\nimport _ from 'lodash';\r\nimport { TableMoreMenu } from 'src/components/table';\r\nimport Iconify from 'src/components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  row: EquipmentItem | null;\r\n  onhandleEditDetails?: (id: any) => void;\r\n  onhandleDeleteRow?: (id: any,name:any) => void;\r\n  handleShowLogs?: (id: any) => void;\r\n};\r\n\r\nexport default function EquipmentTableRow({\r\n  row,\r\n  onhandleEditDetails,\r\n  onhandleDeleteRow,\r\n  handleShowLogs,\r\n}: Props) {\r\n  const theme = useTheme();\r\n\r\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setOpenMenuActions(event.currentTarget);\r\n  };\r\n  const handleCloseMenu = () => {\r\n    setOpenMenuActions(null);\r\n  };\r\n  const { name, equipment, status, id } = row || {};\r\n\r\n  return (\r\n    <TableRow hover>\r\n      <TableCell sx={{ cursor: 'pointer' }} onClick={() => handleShowLogs && handleShowLogs(id)}>\r\n        <Typography variant=\"subtitle2\" noWrap sx={{textTransform: 'capitalize' }}>\r\n          {name || 'N/A'}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap sx={{textTransform: 'capitalize' }}>\r\n          {equipment || 'N/A'}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap sx={{textTransform: 'capitalize' }}>\r\n          {status || 'N/A'}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell align=\"left\">\r\n        <TableMoreMenu\r\n          open={openMenu}\r\n          onOpen={handleOpenMenu}\r\n          onClose={handleCloseMenu}\r\n          actions={\r\n            <>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleEditDetails && onhandleEditDetails(id);\r\n                  handleCloseMenu();\r\n                }}\r\n              >\r\n                <Iconify icon={'eva:edit-fill'} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  onhandleDeleteRow && onhandleDeleteRow(id,name);\r\n                  handleCloseMenu();\r\n                }}\r\n                sx={{ color: 'error.main' }}\r\n              >\r\n                <Iconify icon={'eva:trash-2-outline'} />\r\n                Delete\r\n              </MenuItem>\r\n            </>\r\n          }\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  TableBody,\r\n  Container,\r\n  TableContainer,\r\n  TablePagination,\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useTabs from '../../hooks/useTabs';\r\n\r\nimport useTable from '../../hooks/useTable';\r\n// components\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport {\r\n  deleteEquipment,\r\n  emptyEquipmentsDetails,\r\n  getEquipmentsList,\r\n} from 'src/redux/slices/equipment';\r\nimport Iconify from 'src/components/Iconify';\r\nimport Page from 'src/components/Page';\r\nimport { UserTableToolbar } from 'src/sections/@dashboard/user/list';\r\nimport Scrollbar from 'src/components/Scrollbar';\r\nimport { TableHeadCustom, TableNoData } from 'src/components/table';\r\nimport { EquipmentItem } from 'src/@types/equipment';\r\nimport EquipmentTableRow from 'src/sections/@dashboard/user/list/EquipmentTableRow';\r\nimport { useSnackbar } from 'notistack';\r\nimport { equipmentTableHeader } from 'src/mockUp/Equipment';\r\nimport ConfirmationModal from 'src/components/modal/Confirmation';\r\nimport { DeleteConfirmationContent } from '../sevak/DeleteConfirmationContent';\r\n\r\nexport default function EquipmentList() {\r\n  const {\r\n    page,\r\n    order,\r\n    orderBy,\r\n    rowsPerPage,\r\n    selected,\r\n    onChangePage,\r\n    onChangeRowsPerPage,\r\n    setPage,\r\n  } = useTable();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    village: '',\r\n    openModal: false,\r\n    id: '',\r\n    equipmentName: '',\r\n  });\r\n\r\n  const { currentTab: filterStatus } = useTabs('all');\r\n\r\n  const { equipmentListData } = useSelector((state) => state.equipments);\r\n\r\n  useEffect(() => {\r\n    getEquipmentsList();\r\n  }, []);\r\n\r\n  const onSearch = () => {\r\n    setPage(0);\r\n    getEquipmentsList(state?.name, state?.village);\r\n  };\r\n\r\n  const handleFilterName = (filterName: string) => {\r\n    setState((prev) => ({ ...prev, name: filterName }));\r\n  };\r\n\r\n  const handleFilteRequipment = (filterVillage: string) => {\r\n    setState((prev) => ({ ...prev, village: filterVillage }));\r\n  };\r\n\r\n  const isNotFound =\r\n    (!equipmentListData?.length && !!state?.name) ||\r\n    (!equipmentListData?.length && !!state?.village) ||\r\n    (!equipmentListData?.length && !!filterStatus);\r\n\r\n  const onhandleEditDetails = (id: string) => {\r\n    dispatch(emptyEquipmentsDetails(null));\r\n    navigate(PATH_DASHBOARD.equipments.edit(id));\r\n  };\r\n\r\n  const onhandleDeleteRow = (id: string, name: string) => {\r\n    setState((prev) => ({ ...prev, openModal: true, id: id, equipmentName: name }));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState((prev) => ({ ...prev, openModal: false, id: '', equipmentName: '' }));\r\n  };\r\n\r\n  const handleDeleteEquipment = () => {\r\n    dispatch(deleteEquipment(state?.id))\r\n      .then((res) => {\r\n        if (res?.data?.statusCode === 200) {\r\n          enqueueSnackbar(res?.data?.message, {\r\n            variant: 'success',\r\n          });\r\n          getEquipmentsList();\r\n          setState((prev) => ({ ...prev, openModal: false, id: '', equipmentName: '' }));\r\n        } else {\r\n          getEquipmentsList();\r\n          setState((prev) => ({ ...prev, openModal: false, id: '', equipmentName: '' }));\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('error');\r\n      });\r\n  };\r\n\r\n  const handleShowLogs = (id: string) => {\r\n    navigate(PATH_DASHBOARD.equipments.logs(id));\r\n  };\r\n\r\n  const handleAddEquipment = () => {\r\n    dispatch(emptyEquipmentsDetails(null));\r\n    navigate(PATH_DASHBOARD.equipments.create);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"equipments List\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Equipments List\"\r\n          links={[{ href: PATH_DASHBOARD.equipments.list }]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\r\n              onClick={handleAddEquipment}\r\n            >\r\n              Add Equipment\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card>\r\n          <UserTableToolbar\r\n            filterName={state?.name}\r\n            filterVillage={state?.village}\r\n            onFilterName={handleFilterName}\r\n            onFilterVillage={handleFilteRequipment}\r\n            onSearch={onSearch}\r\n            placeholderText={'Search by name'}\r\n            placeholderTextSecond={'Search by number plate'}\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800, position: 'relative' }}>\r\n              <Table size={'medium'}>\r\n                <TableHeadCustom\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={equipmentTableHeader}\r\n                  rowCount={equipmentListData?.length}\r\n                  numSelected={selected.length}\r\n                />\r\n\r\n                <TableBody>\r\n                  {equipmentListData?.length\r\n                    ? equipmentListData\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row: EquipmentItem) => (\r\n                          <EquipmentTableRow\r\n                            key={row.id}\r\n                            row={row}\r\n                            onhandleEditDetails={onhandleEditDetails}\r\n                            onhandleDeleteRow={onhandleDeleteRow}\r\n                            handleShowLogs={handleShowLogs}\r\n                          />\r\n                        ))\r\n                    : null}\r\n\r\n                  <TableNoData isNotFound={isNotFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <Box sx={{ position: 'relative' }}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={equipmentListData?.length ? equipmentListData.length : 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={onChangePage}\r\n              onRowsPerPageChange={onChangeRowsPerPage}\r\n            />\r\n          </Box>\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmationModal\r\n        openModal={state.openModal}\r\n        // isLoading={isLoading}\r\n        handleClose={handleClose}\r\n        title={'Delete Confirmation!'}\r\n        handleSubmit={handleDeleteEquipment}\r\n      >\r\n        <DeleteConfirmationContent userName={state?.equipmentName} />\r\n      </ConfirmationModal>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["equipmentTableHeader","id","label","align","equipmentLogs","EquipmentTableRow","row","onhandleEditDetails","onhandleDeleteRow","handleShowLogs","useTheme","useState","openMenu","setOpenMenuActions","handleCloseMenu","name","equipment","status","TableRow","hover","TableCell","sx","cursor","onClick","Typography","variant","noWrap","textTransform","open","onOpen","event","currentTarget","onClose","actions","MenuItem","Iconify","icon","color","EquipmentList","useTable","page","order","orderBy","rowsPerPage","selected","onChangePage","onChangeRowsPerPage","setPage","navigate","useNavigate","dispatch","useDispatch","enqueueSnackbar","useSnackbar","village","openModal","equipmentName","state","setState","filterStatus","useTabs","currentTab","useSelector","equipments","equipmentListData","useEffect","getEquipmentsList","isNotFound","length","emptyEquipmentsDetails","PATH_DASHBOARD","prev","Page","title","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","action","Button","startIcon","Card","filterName","filterVillage","onFilterName","onFilterVillage","onSearch","placeholderText","placeholderTextSecond","Scrollbar","TableContainer","minWidth","position","Table","size","headLabel","rowCount","numSelected","TableBody","slice","map","Box","TablePagination","rowsPerPageOptions","component","count","onPageChange","onRowsPerPageChange","Confirmation","handleClose","handleSubmit","deleteEquipment","then","res","data","statusCode","message","catch","console","log","DeleteConfirmationContent","userName"],"sourceRoot":""}