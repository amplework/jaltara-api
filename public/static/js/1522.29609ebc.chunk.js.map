{"version":3,"file":"static/js/1522.29609ebc.chunk.js","mappings":"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","sources":["components/Breadcrumbs.tsx","components/HeaderBreadcrumbs.tsx","components/skeleton/SkeletonPost.tsx","components/skeleton/SkeletonProduct.tsx","components/skeleton/SkeletonPostItem.tsx","components/hook-form/RHFDatePicker.tsx","components/hook-form/RHFMultiSelectDropdown.tsx","components/hook-form/RHFMultiSelect.tsx","pages/farmers/FarmerCreate.tsx","redux/slices/imageUpload.ts","utils/common/index.ts"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Link,\r\n  Typography,\r\n  BreadcrumbsProps,\r\n  Breadcrumbs as MUIBreadcrumbs,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype TLink = {\r\n  href?: string;\r\n  name?: string;\r\n  icon?: ReactElement;\r\n};\r\n\r\nexport interface Props extends BreadcrumbsProps {\r\n  links: TLink[];\r\n  activeLast?: boolean;\r\n}\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={\r\n        <Box\r\n          component=\"span\"\r\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n        />\r\n      }\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype LinkItemProps = {\r\n  link: TLink;\r\n};\r\n\r\nfunction LinkItem({ link }: LinkItemProps) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import { ReactNode } from 'react';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface Props extends BreadcrumbsProps {\r\n  action?: ReactNode;\r\n  heading?: string;\r\n  moreLink?: string | string[];\r\n}\r\n\r\nexport default function HeaderBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink = '' || [],\r\n  sx,\r\n  ...other\r\n}: Props) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// @mui\r\nimport { Box, Skeleton } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SkeletonPost() {\r\n  return (\r\n    <>\r\n      <Box sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\r\n          <Skeleton variant=\"text\" height={50} />\r\n          <Skeleton variant=\"text\" height={50} />\r\n          <Skeleton variant=\"text\" height={50} />\r\n          <Skeleton variant=\"text\" height={50} />\r\n          <Skeleton variant=\"text\" height={50} />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","// @mui\r\nimport { Grid, Skeleton } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SkeletonProduct() {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Skeleton variant=\"text\" height={80} />\r\n        <Skeleton variant=\"text\" height={80} />\r\n        <Skeleton variant=\"text\" height={80} />\r\n        <Skeleton variant=\"text\" height={80} />\r\n        <Skeleton variant=\"text\" height={80} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","// @mui\r\nimport { Box, Skeleton, Grid } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SkeletonPostItem() {\r\n  return (\r\n    <Grid item xs={12} sm={6} md={3} >\r\n      <Box sx={{ display: 'flex', mt: 1.5 , alignItems: 'center'}}>\r\n        <Skeleton variant=\"text\" sx={{ width: \"100%\", height: 60 }} />\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n","import { DatePicker } from \"@mui/x-date-pickers\";\r\nimport { TextField, TextFieldProps, useTheme } from \"@mui/material\";\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n\r\ntype IProps = {\r\n  id?: string;\r\n  name: string;\r\n  label: string;\r\n  sx?: any;\r\n  disabled?: boolean;\r\n  maxDate?: any;\r\n  minDate?: any;\r\n  onChange?: () => void;\r\n  onChangeDate?: any;\r\n  onOpen?: () => void;\r\n  defaultMonth?: any;\r\n};\r\n\r\ntype Props = IProps & TextFieldProps;\r\n\r\nexport const RHFDatePicker = ({\r\n  id,\r\n  name,\r\n  label,\r\n  sx,\r\n  disabled,\r\n  maxDate,\r\n  minDate,\r\n  onChange,\r\n  onChangeDate,\r\n  onOpen,\r\n  defaultMonth,\r\n  ...other\r\n}: Props) => {\r\n  const { control } = useFormContext();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      defaultValue={null}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <DatePicker\r\n          label={<label>{label}</label>}\r\n          inputFormat=\"MM/dd/yyyy\"\r\n          minDate={minDate}\r\n          maxDate={maxDate}\r\n          defaultCalendarMonth={defaultMonth}\r\n          {...field}\r\n          onChange={(date) => {\r\n            field.onChange(date);\r\n            if (onChangeDate) {\r\n              onChangeDate(date);\r\n            }\r\n            if (onChange) {\r\n              onChange();\r\n            }\r\n          }}\r\n          onOpen={onOpen}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              id={id}\r\n              fullWidth\r\n              error={!!error}\r\n              helperText={error?.message}\r\n              value={\r\n                typeof field.value === \"number\" && field.value === 0\r\n                  ? \"\"\r\n                  : field.value\r\n              }\r\n              disabled={disabled}\r\n              autoComplete=\"off\"\r\n            />\r\n          )}\r\n          disabled={disabled}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport RHFSelect from './RHFSelect';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n\r\ntype Props = {\r\n  disabled?: boolean;\r\n  name: string;\r\n  id?: string;\r\n  label: string;\r\n  placeholder: string;\r\n  options?: any;\r\n  sx?: object;\r\n  onChange?: (selected: any) => void;\r\n  defaultMessage?: string;\r\n  selectedValues?: any[];\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst RHFMultiSelectDropdown = ({\r\n  disabled,\r\n  name,\r\n  id,\r\n  label,\r\n  placeholder,\r\n  options = [],\r\n  sx,\r\n  defaultMessage,\r\n  selectedValues = [],\r\n  onChange,\r\n}: Props) => {\r\n\r\n  const handleSelect = (id: any) => {\r\n    const updatedValues = selectedValues?.includes(id)\r\n      ? selectedValues.filter((value) => value !== id)\r\n      : [...selectedValues, id];\r\n\r\n    onChange?.(updatedValues);\r\n  };\r\n  \r\n  return (\r\n    <RHFSelect\r\n      fullWidth\r\n      disabled={disabled}\r\n      name={name}\r\n      id={id}\r\n      label={label}\r\n      placeholder={placeholder}\r\n      sx={sx}\r\n      SelectProps={{\r\n        multiple: true,\r\n        value: selectedValues, \r\n        renderValue: (selected: any) => {\r\n          const selectedNames = selected\r\n            .map((id: any) => options?.find((option: any) => option.id === id)?.name)\r\n            .filter(Boolean); \r\n          return selectedNames.length > 0 ? selectedNames.join(', ') : placeholder;\r\n        },\r\n        MenuProps,\r\n      }}\r\n    >\r\n      {options?.length > 0\r\n        ? options?.map((option: any) => {\r\n            const isSelected = selectedValues?.includes(option?.id);\r\n            return (\r\n              <MenuItem\r\n                key={option.id}\r\n                value={option.id}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  backgroundColor: 'background.paper',\r\n                  '&:hover': {\r\n                    backgroundColor: 'action.hover',\r\n                  },\r\n                  mx: 1,\r\n                  my: 0.5,\r\n                  borderRadius: 0.75,\r\n                  typography: 'body2',\r\n                  textTransform: 'capitalize',\r\n                }}\r\n                onClick={() => handleSelect(option?.id)} \r\n              >\r\n                <Checkbox checked={isSelected} />\r\n                <ListItemText primary={option?.name||option?.challenge} />\r\n              </MenuItem>\r\n            );\r\n          })\r\n        : defaultMessage && (\r\n            <Typography\r\n              sx={{\r\n                mx: 3,\r\n                my: 0.5,\r\n                borderRadius: 0.75,\r\n                typography: 'body2',\r\n                textTransform: 'capitalize',\r\n              }}\r\n            >\r\n              {defaultMessage}\r\n            </Typography>\r\n          )}\r\n    </RHFSelect>\r\n  );\r\n};\r\n\r\nexport default RHFMultiSelectDropdown;\r\n","import MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport RHFSelect from './RHFSelect';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n\r\ntype Props = {\r\n  disabled?: boolean;\r\n  name: string;\r\n  id?: string;\r\n  label: string;\r\n  placeholder: string;\r\n  options?: any;\r\n  sx?: object;\r\n  onChange?: (selected: any) => void;\r\n  defaultMessage?: string;\r\n  selectedValues?: any[];\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst RHFMultiSelect = ({\r\n  disabled,\r\n  name,\r\n  id,\r\n  label,\r\n  placeholder,\r\n  options = [],\r\n  sx,\r\n  defaultMessage,\r\n  selectedValues = [],\r\n  onChange,\r\n}: Props) => {\r\n  const theme = useTheme();\r\n\r\n  const handleSelect = (id: any) => {\r\n    const updatedValues = selectedValues.includes(id)\r\n      ? selectedValues.filter((value) => value !== id)\r\n      : [...selectedValues, id];\r\n\r\n    onChange?.(updatedValues);\r\n  };\r\n  return (\r\n    <RHFSelect\r\n      fullWidth\r\n      disabled={disabled}\r\n      name={name}\r\n      id={id}\r\n      label={label}\r\n      placeholder={placeholder}\r\n      sx={sx}\r\n      SelectProps={{\r\n        multiple: true,\r\n        value: selectedValues,\r\n        renderValue: (selected: any) => {\r\n          const selectedNames = selected\r\n            .map((id: any) => options?.find((option: any) => option?.id === id)?.challenge)\r\n            .filter(Boolean);\r\n          return selectedNames.length > 0 ? selectedNames.join(', ') : placeholder;\r\n        },\r\n        MenuProps,\r\n      }}\r\n    >\r\n      {options?.length > 0\r\n        ? options.map((option: any) => {\r\n            const isSelected = selectedValues.includes(option.id);\r\n            return (\r\n              <MenuItem\r\n                key={option.id}\r\n                value={option.id}\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  backgroundColor: 'background.paper',\r\n                  '&:hover': {\r\n                    backgroundColor: 'action.hover',\r\n                  },\r\n                  mx: 1,\r\n                  my: 0.5,\r\n                  borderRadius: 0.75,\r\n                  typography: 'body2',\r\n                  textTransform: 'capitalize',\r\n                }}\r\n                onClick={() => handleSelect(option?.id)} // Toggle the selection of the option\r\n              >\r\n                <Checkbox checked={isSelected} />\r\n                <ListItemText primary={option?.challenge} />\r\n              </MenuItem>\r\n            );\r\n          })\r\n        : defaultMessage && (\r\n            <Typography\r\n              sx={{\r\n                mx: 3,\r\n                my: 0.5,\r\n                borderRadius: 0.75,\r\n                typography: 'body2',\r\n                textTransform: 'capitalize',\r\n              }}\r\n            >\r\n              {defaultMessage}\r\n            </Typography>\r\n          )}\r\n    </RHFSelect>\r\n  );\r\n};\r\n\r\nexport default RHFMultiSelect;\r\n","import * as Yup from 'yup';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n// @mui\r\nimport { Card, Container, Grid, InputAdornment } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\n\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport { useSnackbar } from 'notistack';\r\nimport { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {\r\n  FormProvider,\r\n  RHFRadioGroup,\r\n  RHFSelectDropdown,\r\n  RHFSwitch,\r\n  RHFTextField,\r\n  RHFUploadSingleFile,\r\n} from 'src/components/hook-form';\r\nimport { Box } from '@mui/material';\r\nimport { Stack } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {\r\n  emptyDistrictList,\r\n  getDistrictList,\r\n  getStatesList,\r\n  getTalukList,\r\n  getVillageList,\r\n} from 'src/redux/slices/user';\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport { Typography } from '@mui/material';\r\nimport Iconify from 'src/components/Iconify';\r\nimport { RHFDatePicker } from 'src/components/hook-form/RHFDatePicker';\r\nimport { FarmerDetailsType } from 'src/@types/farmer';\r\nimport {\r\n  addNewFarmer,\r\n  editNewFarmer,\r\n  getFarmerDetails,\r\n  startLoading,\r\n} from 'src/redux/slices/farmers';\r\nimport { SkeletonProduct } from 'src/components/skeleton';\r\nimport { getCropsList } from 'src/redux/slices/crops';\r\nimport RHFMultiSelectDropdown from 'src/components/hook-form/RHFMultiSelectDropdown';\r\nimport { getCropsChallengesList } from 'src/redux/slices/challanges';\r\nimport RHFMultiSelect from 'src/components/hook-form/RHFMultiSelect';\r\nimport { getEntityName } from 'src/utils/common';\r\nimport profilepic from 'src/assets/images/profile-background.jpg';\r\nimport { getImageUploadUrl } from 'src/redux/slices/imageUpload';\r\n\r\nconst languageList = [\r\n  { id: 'hi', label: 'हिन्दी', name: 'हिन्दी' },\r\n  { id: 'mr', label: 'मराठी', name: 'मराठी' },\r\n  { id: 'en', label: 'English', name: 'english' },\r\n];\r\n\r\nconst OPTION = [\r\n  { label: 'Yes', value: 'true' },\r\n  { label: 'No', value: 'false' },\r\n];\r\nconst content = [\r\n  '(i) telling us where to dig',\r\n  '(ii) collecting rocks/stones',\r\n  '(iii) filling the pit?*',\r\n];\r\nconst content2 = [\r\n  'Do you agree to participate and do your shramdaan for your family’s benefits - which also includes:',\r\n];\r\n\r\nexport default function FarmerCreate() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState<any>({\r\n    villageId: null,\r\n    selectedValues: [],\r\n    selectCropItem: [],\r\n    selectedItems: [],\r\n    selectChallangesValue: [],\r\n    selectChallangesItems: [],\r\n    selectCropChallangesItems: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(startLoading());\r\n      dispatch(getFarmerDetails(id));\r\n    }\r\n    getStatesList();\r\n    getCropsList();\r\n    getCropsChallengesList();\r\n  }, []);\r\n\r\n  const { statesList, districtList, talukList, villageList, usersDetails } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const { cropListData, cropsDetails } = useSelector((state) => state.crops);\r\n\r\n  const { challengesListData } = useSelector((state) => state.challenges);\r\n\r\n  const { farmersDetails, isLoading } = useSelector((state) => state.farmer);\r\n\r\n  const NewFarmerSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .required('Farmer name is required')\r\n      .max(50, 'Limit of 50 characters')\r\n      .matches(/^[^\\s].*$/, 'First character cannot be a space.')\r\n      .matches(/^[A-Za-z\\s]+$/, 'Only alphabetic characters are allowed.'),\r\n    phone: Yup.string()\r\n      .required('Phone number is required')\r\n      .matches(/^\\d{10}$/, 'Only numbers are allowed and limit is 10 digits'), // status: Yup.string().required('Status is required'),\r\n    land: Yup.string()\r\n      .required('Land field is required')\r\n      .matches(\r\n        /^\\d{1,6}(\\.\\d{0,6})?$/,\r\n        'Only numbers are allowed, with a maximum of 6 digits and an optional decimal point.'\r\n      ),\r\n    familyMemberNumber: Yup.string()\r\n      .required('Family member is required')\r\n      .matches(\r\n        /^\\d{1,2}$/, // Matches up to 2 digits\r\n        'Only numbers are allowed, and the maximum number is 2 digits.'\r\n      ),\r\n    language: Yup.string(),\r\n    farmAvailableDate: Yup.string().required('date is required').nullable(),\r\n    selectStates: Yup.string().required('State is required'),\r\n    selectDistrict: Yup.string().required('District is required'),\r\n    selectTaluk: Yup.string().when([], {\r\n      is: () => talukList?.childEntities && talukList?.childEntities?.length > 0,\r\n      then: Yup.string().required('Taluk is required'),\r\n      otherwise: Yup.string(),\r\n    }),\r\n    selectVillage: Yup.string().when([], {\r\n      is: () => villageList?.childEntities && villageList?.childEntities?.length > 0,\r\n      then: Yup.string().required('Village is required'),\r\n      otherwise: Yup.string(),\r\n    }),\r\n    isParticipate: Yup.string().required('Participate is required').nullable(),\r\n    crops: Yup.array()\r\n      .of(Yup.string().required('Each crop must be selected'))\r\n      .min(1, 'At least one crop must be selected'),\r\n    // farmingChallenge: Yup.array()\r\n    //   .of(Yup.string().required('Each crop challanges must be selected'))\r\n    //   .min(1, 'At least one crop must be selected'),\r\n    farmingChallenge: Yup.array()\r\n      .of(Yup.string().required('Each farming challenge must be selected'))\r\n      .notRequired(),\r\n    photo: Yup.mixed(),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      name: '',\r\n      phone: '',\r\n      land: '',\r\n      familyMemberNumber: '',\r\n      farmAvailableDate: '',\r\n      status: '',\r\n      language: '',\r\n      selectStates: '',\r\n      selectDistrict: '',\r\n      selectTaluk: '',\r\n      selectVillage: '',\r\n      isParticipate: '',\r\n      crops: [],\r\n      farmingChallenge: [],\r\n      photo: '',\r\n    }),\r\n    [usersDetails]\r\n  );\r\n\r\n  const methods = useForm<FarmerDetailsType>({\r\n    resolver: yupResolver(NewFarmerSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    watch,\r\n    setValue,\r\n    handleSubmit,\r\n    clearErrors,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const getAssignVillageData = (value: string) => {\r\n    return farmersDetails?.checkUpperGeo?.parents?.find((item: any) => item?.entityType === value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (farmersDetails && id) {\r\n      handleState();\r\n    }\r\n  }, [farmersDetails]);\r\n\r\n  const handleState = () => {\r\n    // const stateIdData = getAssignVillageData('state');\r\n    // const districtIdData: any = getAssignVillageData('district');\r\n    // const talukIdData = getAssignVillageData('taluk');\r\n    const stateIdData = getEntityName('state', farmersDetails?.checkUpperGeo);\r\n\r\n    const districtIdData = getEntityName('district', farmersDetails?.checkUpperGeo);\r\n    const talukIdData = getEntityName('taluk', farmersDetails?.checkUpperGeo);\r\n    console.log(\r\n      'stateIdData',\r\n      stateIdData\r\n      // 'districtIdData',\r\n      // districtIdData,\r\n      // 'talukIdData',\r\n      // talukIdData\r\n    );\r\n    const isVillage = farmersDetails?.checkUpperGeo?.entityType === 'village';\r\n    setValue('name', farmersDetails?.name);\r\n    setValue('phone', farmersDetails?.phone);\r\n    setValue('land', farmersDetails?.land);\r\n    setValue('familyMemberNumber', farmersDetails?.familyMemberNumber);\r\n    setValue('language', farmersDetails?.language);\r\n    setValue('farmAvailableDate', farmersDetails?.farmAvailableDate);\r\n    setValue('isParticipate', farmersDetails?.isParticipate);\r\n    setValue('photo', farmersDetails?.photo);\r\n    setValue('crops', farmersDetails?.crops?.map((item: any) => item?.id) || []);\r\n\r\n    setValue(\r\n      'farmingChallenge',\r\n      farmersDetails?.farmingChallenge?.map((item: any) => item?.id) || []\r\n    );\r\n\r\n    setValue('selectStates', stateIdData?.id || '');\r\n\r\n    setState((prev: any) => ({\r\n      ...prev,\r\n      selectedValues: farmersDetails?.crops?.map((item: any) => item?.id) || [],\r\n      selectChallangesValue: farmersDetails?.farmingChallenge?.map((item: any) => item?.id) || [],\r\n      selectCropItem: farmersDetails?.crops?.map((item: any) => item) || [],\r\n      selectCropChallangesItems: farmersDetails?.farmingChallenge?.map((item: any) => item) || [],\r\n    }));\r\n\r\n    if (farmersDetails && stateIdData?.id) {\r\n      getDistrictList(stateIdData?.id);\r\n      setState((prev: any) => ({ ...prev, villageId: stateIdData?.id }));\r\n\r\n      if (farmersDetails && districtIdData?.id && districtList?.childEntities) {\r\n        getTalukList(districtIdData?.id);\r\n        setValue('selectDistrict', districtIdData?.id || '');\r\n        setState((prev: any) => ({ ...prev, villageId: districtIdData?.id }));\r\n        if (talukIdData && farmersDetails && talukList?.childEntities) {\r\n          getVillageList(talukIdData?.id);\r\n          setValue('selectTaluk', talukIdData?.id || '');\r\n          setState((prev: any) => ({ ...prev, villageId: talukIdData?.id, isLoading: false }));\r\n          if (isVillage && farmersDetails) {\r\n            setValue('selectVillage', farmersDetails?.checkUpperGeo?.id);\r\n            setState((prev: any) => ({\r\n              ...prev,\r\n              villageId: farmersDetails?.checkUpperGeo?.id,\r\n              isLoading: false,\r\n            }));\r\n          } else {\r\n            setValue('selectVillage', farmersDetails?.checkUpperGeo?.id);\r\n            setState((prev: any) => ({\r\n              ...prev,\r\n              villageId: farmersDetails?.checkUpperGeo?.id,\r\n              isLoading: false,\r\n            }));\r\n          }\r\n        } else {\r\n          setState((prev: any) => ({ ...prev, isLoading: false }));\r\n          setValue('selectTaluk', farmersDetails?.checkUpperGeo?.id || '');\r\n        }\r\n      } else if (farmersDetails && stateIdData?.id && !districtIdData?.id) {\r\n        setValue('selectDistrict', farmersDetails?.checkUpperGeo?.id || '');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: FarmerDetailsType) => {\r\n    try {\r\n      let previousState: any = {\r\n        name: farmersDetails?.name,\r\n        phone: farmersDetails?.phone,\r\n        language: farmersDetails?.language,\r\n        familyMemberNumber: Number(farmersDetails?.familyMemberNumber),\r\n        farmAvailableDate: farmersDetails?.farmAvailableDate,\r\n        land: Number(farmersDetails?.land),\r\n        status: farmersDetails?.status,\r\n        isParticipate: farmersDetails?.isParticipate,\r\n      };\r\n\r\n      let payload: any = {\r\n        name: data?.name,\r\n        phone: data?.phone,\r\n        language: data?.language,\r\n        villageId: state?.villageId,\r\n        familyMemberNumber: Number(data.familyMemberNumber),\r\n        farmAvailableDate: data?.farmAvailableDate,\r\n        land: Number(data?.land),\r\n        status: data?.status,\r\n        isParticipate: data?.isParticipate === 'true' ? true : false,\r\n        crops: state?.selectedItems?.length ? state?.selectedItems : state?.selectCropItem,\r\n        farmingChallenge: state?.selectChallangesItems?.length\r\n          ? state?.selectChallangesItems\r\n          : state.selectCropChallangesItems,\r\n        photo: data?.photo,\r\n      };\r\n\r\n      Object.keys(payload).forEach((key) => {\r\n        if (payload[key] === previousState[key]) {\r\n          delete payload[key];\r\n        }\r\n      });\r\n      console.log('payload', payload);\r\n\r\n      if (id) {\r\n        dispatch(editNewFarmer(payload, id)).then((res: any) => {\r\n          if (res?.data?.statusCode === 200) {\r\n            enqueueSnackbar(res?.data?.message, {\r\n              variant: 'success',\r\n            });\r\n            navigate(PATH_DASHBOARD.farmers.list);\r\n          }\r\n        });\r\n      } else {\r\n        dispatch(addNewFarmer(payload)).then((res: any) => {\r\n          if (res?.data?.statusCode === 201) {\r\n            enqueueSnackbar(res?.data?.message, {\r\n              variant: 'success',\r\n            });\r\n            navigate(PATH_DASHBOARD.farmers.list);\r\n          } else {\r\n            enqueueSnackbar(res?.data?.message, {\r\n              variant: 'success',\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleStatesSelect = (id: any) => {\r\n    clearErrors('selectDistrict');\r\n    setValue('selectDistrict', '');\r\n    setValue('selectTaluk', '');\r\n    setValue('selectVillage', '');\r\n    dispatch(emptyDistrictList(null));\r\n    getDistrictList(id);\r\n  };\r\n\r\n  const handleDistrictSelect = (id: any) => {\r\n    clearErrors('selectTaluk');\r\n    setState((prev: any) => ({ ...prev, villageId: id }));\r\n    setValue('selectTaluk', '');\r\n    setValue('selectVillage', '');\r\n    getTalukList(id);\r\n  };\r\n\r\n  const handleTalukSelect = (id: string) => {\r\n    setState((prev: any) => ({ ...prev, villageId: id }));\r\n    clearErrors('selectVillage');\r\n    setValue('selectVillage', '');\r\n    getVillageList(id);\r\n  };\r\n\r\n  const handleVillageSelect = (id: string) => {\r\n    setState((prev: any) => ({ ...prev, villageId: id }));\r\n  };\r\n\r\n  const handleChange = (newSelectedValues: any[]) => {\r\n    const names = cropListData\r\n      ?.filter((item: any) => newSelectedValues.includes(item?.id))\r\n      .map((item) => item);\r\n\r\n    setState((prev: any) => ({\r\n      ...prev,\r\n      selectedValues: newSelectedValues,\r\n      selectedItems: names,\r\n    }));\r\n  };\r\n\r\n  const handleCropChallangesChange = (newSelectedValues: any[]) => {\r\n    const names = challengesListData\r\n      ?.filter((item: any) => newSelectedValues?.includes(item?.id))\r\n      ?.map((item: any) => item);\r\n\r\n    setState((prev: any) => ({\r\n      ...prev,\r\n      selectChallangesValue: newSelectedValues,\r\n      selectChallangesItems: names,\r\n    }));\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles: File[]) => {\r\n      const file = acceptedFiles[0];\r\n      if (file) {\r\n        let formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        dispatch(getImageUploadUrl(formData)).then((res) => {\r\n          if (res?.statusCode === 200) {\r\n            enqueueSnackbar(res?.message, {\r\n              variant: 'success',\r\n            });\r\n            setValue('photo', res?.data);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  return (\r\n    <Page title=\"Create farmer\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading={!id ? 'Add Farmer' : 'Edit Farmer details'}\r\n          links={[\r\n            { name: 'Farmer List', href: PATH_DASHBOARD.sevak.list },\r\n            { name: !id ? 'Add Farmer' : 'Edit Farmer' },\r\n          ]}\r\n        />\r\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={12}>\r\n              <Card\r\n                sx={{\r\n                  mb: 10,\r\n                  overflow: 'visible', // Allow the image to overflow outside the Card\r\n                  position: 'relative',\r\n                  display: 'flex',\r\n                  justifyContent: 'center', // Center content horizontally\r\n                  alignItems: 'center', // Center content vertically\r\n                  minHeight: '200px', // Adjust height based on content\r\n                  padding: 2,\r\n                  backgroundImage: `url(${profilepic})`,\r\n                  // backgroundImage: `url(${watch('photo')})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundPosition: 'center',\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  <RHFUploadSingleFile\r\n                    name=\"photo\"\r\n                    onDrop={handleDrop}\r\n                    sx={{\r\n                      zIndex: 9,\r\n                      mt: 5,\r\n                      position: 'absolute',\r\n                      bottom: '-60px',\r\n                      width: '200px',\r\n                      height: '200px',\r\n                      borderRadius: '50%',\r\n                      objectFit: 'cover',\r\n                      border: '2px solid #e0e0e0',\r\n                      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Card>\r\n\r\n              {isLoading ? (\r\n                <Card sx={{ p: 3 }}>\r\n                  <SkeletonProduct />\r\n                </Card>\r\n              ) : (\r\n                <Card sx={{ p: 3 }}>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'grid',\r\n                      columnGap: 2,\r\n                      rowGap: 3,\r\n                      gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n                    }}\r\n                  >\r\n                    <RHFTextField name=\"name\" label=\"Farmer Name\" />\r\n                    <RHFTextField\r\n                      name=\"phone\"\r\n                      label=\"Phone Number\"\r\n                      InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">+91</InputAdornment>,\r\n                      }}\r\n                    />\r\n\r\n                    <RHFTextField name=\"land\" label=\"Land (arces)\" />\r\n                    <RHFTextField name=\"familyMemberNumber\" label=\"Family Members (including farmer)\" />\r\n                    <RHFDatePicker\r\n                      name=\"farmAvailableDate\"\r\n                      label=\"Farm Available Date\"\r\n                      minDate={new Date()}\r\n                    />\r\n                    {/* <RHFSelectDropdown\r\n                      name=\"language\"\r\n                      label={'Select Language'}\r\n                      value={watch('language')}\r\n                      placeholder={'Language'}\r\n                      options={languageList}\r\n                    /> */}\r\n                    <RHFMultiSelectDropdown\r\n                      name=\"crops\"\r\n                      label={'Crops'}\r\n                      placeholder={'Crops'}\r\n                      options={cropListData}\r\n                      onChange={handleChange}\r\n                      selectedValues={state.selectedValues}\r\n                    />\r\n                    <RHFMultiSelect\r\n                      name=\"farmingChallenge\"\r\n                      label={'Farming Challenge'}\r\n                      placeholder={'Farming Challenge'}\r\n                      options={challengesListData}\r\n                      onChange={handleCropChallangesChange}\r\n                      selectedValues={state.selectChallangesValue}\r\n                    />\r\n                    <Box width=\"100%\">\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        <Box display=\"flex\" flexWrap=\"wrap\" flex=\"1\">\r\n                          {content2?.map((text, index) => (\r\n                            <Typography\r\n                              key={index}\r\n                              variant=\"body2\"\r\n                              sx={{\r\n                                mb: 0.5,\r\n                                width: '100%',\r\n                                flexShrink: 0,\r\n                              }}\r\n                            >\r\n                              {text}\r\n                            </Typography>\r\n                          ))}\r\n                        </Box>\r\n                      </Box>\r\n\r\n                      {content?.map((text, index) => (\r\n                        <Typography key={index} variant={'body2'} sx={{ mb: 0.5 }}>\r\n                          {text}\r\n                        </Typography>\r\n                      ))}\r\n                      {/* <RHFSwitch\r\n                        name=\"isParticipate\"\r\n                        labelPlacement=\"end\"\r\n                        label=\"\"\r\n                        sx={{\r\n                          mx: 0,\r\n                          justifyContent: 'flex-end',\r\n                          flexShrink: 0,\r\n                          '& .MuiSwitch-switchBase': {\r\n                            color: '#ccc',\r\n                          },\r\n                          '& .MuiSwitch-switchBase.Mui-checked': {\r\n                            color: '#a2a',\r\n                          },\r\n                          '& .MuiSwitch-track': {\r\n                            backgroundColor: '#ddd',\r\n                            opacity: 1,\r\n                          },\r\n                          '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\r\n                            backgroundColor: '#a2a',\r\n                          },\r\n                        }}\r\n                      /> */}\r\n                      <RHFRadioGroup\r\n                        name=\"isParticipate\"\r\n                        options={OPTION}\r\n                        sx={{\r\n                          '& .MuiFormControlLabel-root': { mr: 4 },\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  <Typography variant=\"h4\" py={2}>\r\n                    Assign Location\r\n                  </Typography>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'grid',\r\n                      columnGap: 2,\r\n                      rowGap: 3,\r\n                      gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n                    }}\r\n                  >\r\n                    <RHFSelectDropdown\r\n                      name=\"selectStates\"\r\n                      label={'Select State'}\r\n                      placeholder={'State'}\r\n                      options={statesList}\r\n                      value={watch('selectStates')}\r\n                      onChange={handleStatesSelect}\r\n                    />\r\n                    {/* <RHFSelectDropdown\r\n                      name=\"selectStates\"\r\n                      label={'Select States'}\r\n                      value={watch('selectStates')}\r\n                      placeholder={'States'}\r\n                      options={statesList}\r\n                      defaultMessage=\"Please Select State\"\r\n                      onChange={handleStatesSelect}\r\n                    /> */}\r\n                    {districtList?.childEntities?.length ? (\r\n                      <RHFSelectDropdown\r\n                        name=\"selectDistrict\"\r\n                        label={'Select District'}\r\n                        value={watch('selectDistrict')}\r\n                        placeholder={'District'}\r\n                        options={districtList?.childEntities}\r\n                        defaultMessage=\"Please Select State\"\r\n                        onChange={handleDistrictSelect}\r\n                        //   disabled={state.isLoading}\r\n                      />\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {talukList?.childEntities?.length ? (\r\n                      <RHFSelectDropdown\r\n                        name=\"selectTaluk\"\r\n                        label={'Select Taluk'}\r\n                        placeholder={'Taluk'}\r\n                        value={watch('selectTaluk')}\r\n                        options={talukList?.childEntities || []}\r\n                        defaultMessage=\"Please Select District\"\r\n                        onChange={handleTalukSelect}\r\n                      />\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {villageList?.childEntities?.length ? (\r\n                      <RHFSelectDropdown\r\n                        name=\"selectVillage\"\r\n                        label={'Select Village'}\r\n                        placeholder={'Village'}\r\n                        value={watch('selectVillage')}\r\n                        options={villageList?.childEntities}\r\n                        defaultMessage=\"Please Select Village\"\r\n                        onChange={handleVillageSelect}\r\n                      />\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Box>\r\n\r\n                  <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      loading={isSubmitting}\r\n                      startIcon={<Iconify icon={'mingcute:user-add-fill'} />}\r\n                    >\r\n                      {id ? 'Save' : 'Add'}\r\n                    </LoadingButton>\r\n                  </Stack>\r\n                </Card>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </FormProvider>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { EventInput } from '@fullcalendar/common';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n//\r\nimport { dispatch } from '../store';\r\nimport { CropList } from 'src/@types/crops';\r\nimport { ChallengesItemList } from 'src/@types/challanges';\r\nimport { imageData } from 'src/@types/image';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst initialState: imageData = {\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'image',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\nexport const {} = slice.actions;\r\n\r\n// ----------------------------------------------------------------------\r\nexport function getImageUploadUrl(formData: any) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n\r\n    try {\r\n      const response = await axios.post('/upload-image', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response?.data;\r\n    } catch (error) {\r\n      if (error?.statusCode === 403) {\r\n        return error;\r\n      }\r\n    }\r\n  };\r\n}\r\n","export const getEntityName = (entityType: string, checkUpperGeo: any) => {\r\n  if (!checkUpperGeo) return null;\r\n  return checkUpperGeo?.entityType === entityType\r\n    ? checkUpperGeo\r\n    : checkUpperGeo?.parents?.find((item: any) => item?.entityType === entityType);\r\n};\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","SkeletonPost","ml","SkeletonProduct","Grid","container","spacing","item","xs","SkeletonPostItem","sm","md","RHFDatePicker","id","label","disabled","maxDate","minDate","onChange","onChangeDate","onOpen","defaultMonth","control","useFormContext","useTheme","defaultValue","render","field","error","fieldState","DatePicker","inputFormat","defaultCalendarMonth","date","renderInput","params","TextField","fullWidth","helperText","message","value","autoComplete","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","placeholder","options","defaultMessage","selectedValues","RHFSelect","SelectProps","multiple","renderValue","selected","selectedNames","find","option","filter","Boolean","join","isSelected","includes","MenuItem","backgroundColor","mx","my","typography","textTransform","onClick","updatedValues","handleSelect","Checkbox","checked","ListItemText","primary","challenge","OPTION","content","content2","FarmerCreate","useParams","navigate","useNavigate","enqueueSnackbar","useSnackbar","dispatch","useDispatch","useState","villageId","selectCropItem","selectedItems","selectChallangesValue","selectChallangesItems","selectCropChallangesItems","state","setState","useEffect","startLoading","getFarmerDetails","getStatesList","getCropsList","getCropsChallengesList","useSelector","user","statesList","districtList","talukList","villageList","usersDetails","crops","cropListData","cropsDetails","challenges","challengesListData","farmer","farmersDetails","isLoading","NewFarmerSchema","Yup","shape","required","max","matches","phone","land","familyMemberNumber","language","farmAvailableDate","nullable","selectStates","selectDistrict","selectTaluk","when","is","childEntities","then","otherwise","selectVillage","isParticipate","of","min","farmingChallenge","notRequired","photo","defaultValues","useMemo","status","methods","useForm","resolver","yupResolver","watch","setValue","handleSubmit","clearErrors","isSubmitting","formState","handleState","stateIdData","getEntityName","checkUpperGeo","districtIdData","talukIdData","console","log","isVillage","entityType","prev","getDistrictList","getTalukList","getVillageList","onSubmit","data","previousState","Number","payload","Object","keys","forEach","key","editNewFarmer","res","statusCode","PATH_DASHBOARD","addNewFarmer","handleDrop","useCallback","acceptedFiles","file","formData","FormData","append","getImageUploadUrl","Page","title","Container","Card","position","justifyContent","minHeight","padding","backgroundImage","profilepic","backgroundSize","backgroundRepeat","backgroundPosition","onDrop","zIndex","bottom","objectFit","border","boxShadow","cursor","p","columnGap","rowGap","gridTemplateColumns","InputProps","startAdornment","InputAdornment","Date","newSelectedValues","names","flexWrap","flex","text","index","py","emptyDistrictList","Stack","LoadingButton","type","loading","startIcon","Iconify","slice","createSlice","initialState","reducers","hasError","actions","axios","headers","response","parents"],"sourceRoot":""}