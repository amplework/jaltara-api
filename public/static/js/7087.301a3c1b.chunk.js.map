{"version":3,"file":"static/js/7087.301a3c1b.chunk.js","mappings":"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","sources":["components/common/cards/imageCard/index.tsx","components/common/detailsListing/listing/index.tsx","mockUp/Equipment.ts","sections/@dashboard/user/list/EquipmentLogsRow.tsx","pages/equipments/EquipmentDetails.tsx","utils/formateDate.ts"],"sourcesContent":["import { Box, Grid } from '@mui/material';\r\nimport Image from 'src/components/Image';\r\nimport noImage from 'src/assets/images/noImage.jpg';\r\n\r\nconst ImageCard = ({ src }: { src: string | null }) => {\r\n  return (\r\n        <Box\r\n          sx={{\r\n            width: 300,\r\n            height: 300,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: 2,\r\n            overflow: 'hidden',\r\n            boxShadow: 3,\r\n            transition: 'box-shadow 0.3s ease-in-out',\r\n            '&:hover': {\r\n              boxShadow: 6,\r\n            },\r\n          }}\r\n        >\r\n          <Image\r\n            src={src ? src : noImage}\r\n            alt={src ? 'Uploaded Image' : 'No Image Available'}\r\n            sx={{\r\n              width: '90%',\r\n              height: 'auto',\r\n              borderRadius:\"10PX\",\r\n              objectFit: 'cover',\r\n              transition: 'transform 0.3s ease-in-out',\r\n              '&:hover': {\r\n                transform: 'scale(1.05)',\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n  );\r\n};\r\nexport default ImageCard;\r\n","import { Box, Typography } from '@mui/material';\r\n\r\nexport default function DetailsList({ details }: { details: { label: string; value: string }[] }) {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n      {details.map(({ label, value }) => (\r\n        <Box key={label} display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', minWidth: 180,textTransform: 'capitalize' }}>\r\n            {label} :\r\n          </Typography>\r\n          <Typography variant=\"body1\" sx={{ textTransform: 'capitalize' }}>\r\n            {value}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","export const equipmentTableHeader = [\r\n    { id: 'name', label: 'Name', align: 'left' },\r\n    { id: 'equipment', label: 'Number Plate', align: 'left' },\r\n    { id: 'status', label: 'Status', align: 'left' },\r\n    { id: 'action', label: 'Action', align: 'left' },\r\n  ];\r\n\r\n  export const equipmentLogs = [\r\n    { id: 'startTime ', label: 'Start Date & Time', align: 'left' },\r\n    { id: 'endTime ', label: 'End Date & Time', align: 'left' },\r\n    { id: 'timeRecord', label: 'Time Record', align: 'left' },\r\n  ];\r\n  ","import { TableRow, TableCell, Typography } from '@mui/material';\r\n// components\r\nimport { formatedDateTime } from 'src/utils/formateDate';\r\nimport { EquipmentLogsType } from 'src/@types/equipment';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Props = {\r\n  row: EquipmentLogsType;\r\n  index: number;\r\n};\r\n\r\nexport default function EquipmentLogsRow({ row }: Props) {\r\n  const { startTime, endTime, timeRecord } = row || {};\r\n\r\n  return (\r\n    <TableRow hover>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {formatedDateTime(startTime)}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n        {formatedDateTime(startTime)}\r\n        </Typography>\r\n      </TableCell>\r\n\r\n      <TableCell>\r\n        <Typography variant=\"subtitle2\" noWrap>\r\n          {timeRecord?timeRecord:'-'}\r\n        </Typography>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { useParams } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TableContainer,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  useTheme,\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// redux\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport Image from 'src/components/Image';\r\nimport { Table } from '@mui/material';\r\nimport { TableHeadCustom } from 'src/components/table';\r\nimport Scrollbar from 'src/components/Scrollbar';\r\nimport noImage from 'src/assets/images/noImage.jpg';\r\nimport { SkeletonProduct } from 'src/components/skeleton';\r\nimport { getEquipmentsDetails } from 'src/redux/slices/equipment';\r\nimport EquipmentLogsRow from 'src/sections/@dashboard/user/list/EquipmentLogsRow';\r\nimport jcbPic from 'src/assets/images/jcbPic.jpeg';\r\nimport { equipmentLogs } from 'src/mockUp/Equipment';\r\nimport ImageCard from 'src/components/common/cards/imageCard';\r\nimport DetailsList from 'src/components/common/detailsListing/listing';\r\n\r\nexport default function EquipmentDetails() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getEquipmentsDetails(id));\r\n    }\r\n  }, [id, dispatch]);\r\n\r\n  const { equipmentDetails, isLoading } = useSelector((state) => state.equipments);\r\n\r\n  const { name, phone, equipment, status, logs,photo } = equipmentDetails;\r\n\r\n  const details = [\r\n    { label: 'Name', value: name },\r\n    { label: 'number plate', value: equipment },\r\n    { label: 'Phone Number', value: phone },\r\n    { label: 'status', value: status },\r\n  ];\r\n\r\n  return (\r\n    <Page title=\"Equipment Details\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Equipment Details\"\r\n          links={[\r\n            { name: 'Equipment List', href: PATH_DASHBOARD.equipments.list },\r\n            { name: 'Equipment Details' },\r\n          ]}\r\n        />\r\n        <Card sx={{ p: 3, boxShadow: 3, borderRadius: 2, margin: 'auto' }}>\r\n          {isLoading ? (\r\n            <SkeletonProduct />\r\n          ) : (\r\n            <Grid container spacing={4} justifyContent=\"center\">\r\n              {/* Image Section */}\r\n              <Grid item xs={12} sm={6} lg={4} display=\"flex\" justifyContent=\"center\">\r\n                <ImageCard src={photo || noImage} />\r\n              </Grid>\r\n\r\n              {/* Details Section */}\r\n              <Grid item xs={12} sm={6} lg={8}>\r\n                <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n                  Equipment Information\r\n                </Typography>\r\n                <DetailsList details={details} />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          {/* Stages Section */}\r\n          {logs && (\r\n            <Grid item xs={12} pt={3}>\r\n              <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n                Equipment Logs\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                <Scrollbar>\r\n                  <TableContainer\r\n                    // component={Paper}\r\n                    sx={{ minWidth: 800, boxShadow: 3, borderRadius: 2, overflow: 'hidden' }}\r\n                  >\r\n                    <Table size=\"medium\">\r\n                      <TableHeadCustom headLabel={equipmentLogs} />\r\n                      <TableBody>\r\n                        {logs?.length > 0 ? (\r\n                          logs?.map((row: any, index: number) => (\r\n                            <EquipmentLogsRow key={row.id} row={row} index={index} />\r\n                          ))\r\n                        ) : (\r\n                          <TableRow>\r\n                            <TableCell colSpan={equipmentLogs?.length} align=\"center\">\r\n                              No data available\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Scrollbar>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import moment from 'moment';\r\nexport function formatedDate(date?: Date | string | number) {\r\n  return moment(date).format('MM/DD/YYYY');\r\n}\r\n\r\nexport function formatedDateTime(date?: Date | string | number) {\r\n  return moment(date).format('MM/DD/YYYY hh:mm a');\r\n}\r\n"],"names":["src","sx","width","height","display","alignItems","justifyContent","borderRadius","overflow","boxShadow","transition","noImage","alt","objectFit","transform","DetailsList","details","flexDirection","gap","mt","map","label","value","variant","fontWeight","minWidth","textTransform","equipmentTableHeader","id","align","equipmentLogs","EquipmentLogsRow","row","startTime","timeRecord","endTime","TableRow","hover","TableCell","Typography","noWrap","formatedDateTime","EquipmentDetails","useParams","dispatch","useDispatch","useEffect","getEquipmentsDetails","useSelector","state","equipments","equipmentDetails","isLoading","name","phone","equipment","status","logs","photo","Page","title","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","PATH_DASHBOARD","Card","p","margin","Grid","container","spacing","item","xs","sm","lg","mb","pt","Box","Scrollbar","TableContainer","Table","size","headLabel","TableBody","length","index","colSpan","formatedDate","date","moment","format"],"sourceRoot":""}