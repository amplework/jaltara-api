{"version":3,"file":"static/js/5607.ed312cc2.chunk.js","mappings":"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","sources":["components/Breadcrumbs.tsx","components/HeaderBreadcrumbs.tsx","components/common/videoPlayer/index.tsx","pages/masterData/tutorials/TutorialDetails.tsx"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Link,\r\n  Typography,\r\n  BreadcrumbsProps,\r\n  Breadcrumbs as MUIBreadcrumbs,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype TLink = {\r\n  href?: string;\r\n  name?: string;\r\n  icon?: ReactElement;\r\n};\r\n\r\nexport interface Props extends BreadcrumbsProps {\r\n  links: TLink[];\r\n  activeLast?: boolean;\r\n}\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={\r\n        <Box\r\n          component=\"span\"\r\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n        />\r\n      }\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype LinkItemProps = {\r\n  link: TLink;\r\n};\r\n\r\nfunction LinkItem({ link }: LinkItemProps) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import { ReactNode } from 'react';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface Props extends BreadcrumbsProps {\r\n  action?: ReactNode;\r\n  heading?: string;\r\n  moreLink?: string | string[];\r\n}\r\n\r\nexport default function HeaderBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink = '' || [],\r\n  sx,\r\n  ...other\r\n}: Props) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Card, CardActions, CardContent, CardHeader, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\ntype VideoPlayerProps = {\r\n  item?: any;\r\n};\r\nexport const VideoPlayer = ({ item }: VideoPlayerProps) => {\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      <ReactPlayer\r\n        url={item?.url}\r\n        controls\r\n        light={item?.thumbnail} // Thumbnail\r\n        width=\"300px\"\r\n        height=\"250px\"\r\n        playing={true} // Prevent autoplay\r\n        playIcon={\r\n          <div\r\n            style={{\r\n              width: '60px',\r\n              height: '60px',\r\n              background: 'rgba(0, 0, 0, 0.5)',\r\n              borderRadius: '50%',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              fill=\"white\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path d=\"M8 5v14l11-7z\" />\r\n            </svg>\r\n          </div>\r\n        } // Custom play button over thumbnail\r\n        style={{\r\n          borderRadius: '10px',\r\n          boxShadow: '0 4px 10px rgba(0,0,0,0.3)',\r\n        }}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" sx={{ textTransform:\"capitalize\" }}>\r\n          {item?.name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary',textTransform:\"capitalize\" }}>\r\n          {item?.status}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { useParams, useNavigate } from 'react-router-dom';\r\nimport { Box, Card, Container, Grid, Typography } from '@mui/material';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useEffect } from 'react';\r\nimport Page from 'src/components/Page';\r\nimport HeaderBreadcrumbs from 'src/components/HeaderBreadcrumbs';\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\nimport { useDispatch, useSelector } from 'src/redux/store';\r\nimport { getTutorialsDetails } from 'src/redux/slices/tutorial';\r\nimport ReactPlayer from 'react-player';\r\nimport { VideoPlayer } from 'src/components/common/videoPlayer';\r\n\r\nconst statusList = [\r\n  { id: 'active', label: 'Active', name: 'active' },\r\n  { id: 'inactive', label: 'Inactive', name: 'inactive' },\r\n];\r\n\r\nexport default function TutorialDetails() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getDetails();\r\n    }\r\n  }, []);\r\n\r\n  const { tutorialDetails } = useSelector((state) => state.tutorials);\r\n  const { subject, status, description, videos } = tutorialDetails;\r\n  const getDetails = () => {\r\n    dispatch(getTutorialsDetails(id));\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Tutorial Details\">\r\n      <Container maxWidth={'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading={'Tutorial Details'}\r\n          links={[\r\n            { name: 'Tutorial List', href: PATH_DASHBOARD.sevak.list },\r\n            { name: 'Tutorial Details' },\r\n          ]}\r\n        />\r\n        <Card\r\n          sx={{\r\n            p: 3,\r\n            boxShadow: 4,\r\n            borderRadius: 3,\r\n            // backgroundColor: '#f9f9f9',\r\n            overflow: 'hidden',\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n            {subject}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            py={1}\r\n            color=\"text.secondary\"\r\n            sx={{ textTransform: 'capitalize', fontSize: '1.1rem' }}\r\n          >\r\n            {description}\r\n          </Typography>\r\n          <Grid container spacing={3} py={2}>\r\n            {videos?.map((item: any, index: any) => {\r\n              return (\r\n                <Box key={index} m={2}>\r\n                  <VideoPlayer item={item} />\r\n                </Box>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","VideoPlayer","item","Card","url","controls","light","thumbnail","playing","playIcon","style","background","justifyContent","xmlns","fill","viewBox","d","boxShadow","CardContent","textTransform","status","TutorialDetails","id","useParams","dispatch","useNavigate","useDispatch","useSnackbar","enqueueSnackbar","useEffect","getDetails","tutorialDetails","useSelector","state","tutorials","subject","description","videos","getTutorialsDetails","Page","title","Container","PATH_DASHBOARD","p","fontWeight","py","fontSize","Grid","container","spacing","index","m"],"sourceRoot":""}